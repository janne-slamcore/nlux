{"version":3,"file":"hf.js","sources":["../../../../packages/shared/src/types/error.ts","../../../../node_modules/@huggingface/inference/dist/index.js","../../../../packages/shared/src/utils/uid.ts","../../../../packages/shared/src/utils/warn.ts","../../../../packages/js/hf/src/utils/adapterErrorToExceptionId.ts","../../../../packages/js/hf/src/hf/adapter/chatAdapter.ts","../../../../packages/js/hf/src/hf/builder/builderImpl.ts","../../../../packages/js/hf/src/createChatAdapter.ts","../../../../packages/js/hf/src/hf/preProcessors/llama2.ts"],"sourcesContent":["import {NLErrorId} from './exceptions/errors';\n\nexport type NluxRawError = {\n    readonly message?: string;\n    readonly type?: string;\n    readonly source?: string;\n    readonly exceptionId?: NLErrorId;\n};\n\nexport class NluxError extends Error {\n    readonly exceptionId?: NLErrorId;\n    readonly message: string;\n    readonly source?: string;\n    readonly type: string;\n\n    constructor(rawError: NluxRawError = {}) {\n        super(rawError.message);\n\n        this.message = rawError.message ?? '';\n        this.source = rawError.source;\n        this.type = this.constructor.name;\n        this.exceptionId = rawError.exceptionId;\n    }\n}\n\nexport class NluxUsageError extends NluxError {\n}\n\nexport class NluxValidationError extends NluxError {\n}\n\nexport class NluxRenderingError extends NluxError {\n}\n","var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/tasks/index.ts\nvar tasks_exports = {};\n__export(tasks_exports, {\n  audioClassification: () => audioClassification,\n  audioToAudio: () => audioToAudio,\n  automaticSpeechRecognition: () => automaticSpeechRecognition,\n  chatCompletion: () => chatCompletion,\n  chatCompletionStream: () => chatCompletionStream,\n  documentQuestionAnswering: () => documentQuestionAnswering,\n  featureExtraction: () => featureExtraction,\n  fillMask: () => fillMask,\n  imageClassification: () => imageClassification,\n  imageSegmentation: () => imageSegmentation,\n  imageToImage: () => imageToImage,\n  imageToText: () => imageToText,\n  objectDetection: () => objectDetection,\n  questionAnswering: () => questionAnswering,\n  request: () => request,\n  sentenceSimilarity: () => sentenceSimilarity,\n  streamingRequest: () => streamingRequest,\n  summarization: () => summarization,\n  tableQuestionAnswering: () => tableQuestionAnswering,\n  tabularClassification: () => tabularClassification,\n  tabularRegression: () => tabularRegression,\n  textClassification: () => textClassification,\n  textGeneration: () => textGeneration,\n  textGenerationStream: () => textGenerationStream,\n  textToImage: () => textToImage,\n  textToSpeech: () => textToSpeech,\n  tokenClassification: () => tokenClassification,\n  translation: () => translation,\n  visualQuestionAnswering: () => visualQuestionAnswering,\n  zeroShotClassification: () => zeroShotClassification,\n  zeroShotImageClassification: () => zeroShotImageClassification\n});\n\n// src/utils/pick.ts\nfunction pick(o, props) {\n  return Object.assign(\n    {},\n    ...props.map((prop) => {\n      if (o[prop] !== void 0) {\n        return { [prop]: o[prop] };\n      }\n    })\n  );\n}\n\n// src/utils/typedInclude.ts\nfunction typedInclude(arr, v) {\n  return arr.includes(v);\n}\n\n// src/utils/omit.ts\nfunction omit(o, props) {\n  const propsArr = Array.isArray(props) ? props : [props];\n  const letsKeep = Object.keys(o).filter((prop) => !typedInclude(propsArr, prop));\n  return pick(o, letsKeep);\n}\n\n// src/lib/isUrl.ts\nfunction isUrl(modelOrUrl) {\n  return /^http(s?):/.test(modelOrUrl) || modelOrUrl.startsWith(\"/\");\n}\n\n// src/lib/getDefaultTask.ts\nvar taskCache = /* @__PURE__ */ new Map();\nvar CACHE_DURATION = 10 * 60 * 1e3;\nvar MAX_CACHE_ITEMS = 1e3;\nvar HF_HUB_URL = \"https://huggingface.co\";\nasync function getDefaultTask(model, accessToken, options) {\n  if (isUrl(model)) {\n    return null;\n  }\n  const key = `${model}:${accessToken}`;\n  let cachedTask = taskCache.get(key);\n  if (cachedTask && cachedTask.date < new Date(Date.now() - CACHE_DURATION)) {\n    taskCache.delete(key);\n    cachedTask = void 0;\n  }\n  if (cachedTask === void 0) {\n    const modelTask = await (options?.fetch ?? fetch)(`${HF_HUB_URL}/api/models/${model}?expand[]=pipeline_tag`, {\n      headers: accessToken ? { Authorization: `Bearer ${accessToken}` } : {}\n    }).then((resp) => resp.json()).then((json) => json.pipeline_tag).catch(() => null);\n    if (!modelTask) {\n      return null;\n    }\n    cachedTask = { task: modelTask, date: /* @__PURE__ */ new Date() };\n    taskCache.set(key, { task: modelTask, date: /* @__PURE__ */ new Date() });\n    if (taskCache.size > MAX_CACHE_ITEMS) {\n      taskCache.delete(taskCache.keys().next().value);\n    }\n  }\n  return cachedTask.task;\n}\n\n// src/lib/makeRequestOptions.ts\nvar HF_INFERENCE_API_BASE_URL = \"https://api-inference.huggingface.co\";\nvar tasks = null;\nasync function makeRequestOptions(args, options) {\n  const { accessToken, endpointUrl, ...otherArgs } = args;\n  let { model } = args;\n  const {\n    forceTask: task,\n    includeCredentials,\n    taskHint,\n    wait_for_model,\n    use_cache,\n    dont_load_model,\n    chatCompletion: chatCompletion2\n  } = options ?? {};\n  const headers = {};\n  if (accessToken) {\n    headers[\"Authorization\"] = `Bearer ${accessToken}`;\n  }\n  if (!model && !tasks && taskHint) {\n    const res = await fetch(`${HF_HUB_URL}/api/tasks`);\n    if (res.ok) {\n      tasks = await res.json();\n    }\n  }\n  if (!model && tasks && taskHint) {\n    const taskInfo = tasks[taskHint];\n    if (taskInfo) {\n      model = taskInfo.models[0].id;\n    }\n  }\n  if (!model) {\n    throw new Error(\"No model provided, and no default model found for this task\");\n  }\n  const binary = \"data\" in args && !!args.data;\n  if (!binary) {\n    headers[\"Content-Type\"] = \"application/json\";\n  }\n  if (wait_for_model) {\n    headers[\"X-Wait-For-Model\"] = \"true\";\n  }\n  if (use_cache === false) {\n    headers[\"X-Use-Cache\"] = \"false\";\n  }\n  if (dont_load_model) {\n    headers[\"X-Load-Model\"] = \"0\";\n  }\n  let url = (() => {\n    if (endpointUrl && isUrl(model)) {\n      throw new TypeError(\"Both model and endpointUrl cannot be URLs\");\n    }\n    if (isUrl(model)) {\n      console.warn(\"Using a model URL is deprecated, please use the `endpointUrl` parameter instead\");\n      return model;\n    }\n    if (endpointUrl) {\n      return endpointUrl;\n    }\n    if (task) {\n      return `${HF_INFERENCE_API_BASE_URL}/pipeline/${task}/${model}`;\n    }\n    return `${HF_INFERENCE_API_BASE_URL}/models/${model}`;\n  })();\n  if (chatCompletion2 && !url.endsWith(\"/chat/completions\")) {\n    url += \"/v1/chat/completions\";\n  }\n  let credentials;\n  if (typeof includeCredentials === \"string\") {\n    credentials = includeCredentials;\n  } else if (includeCredentials === true) {\n    credentials = \"include\";\n  }\n  const info = {\n    headers,\n    method: \"POST\",\n    body: binary ? args.data : JSON.stringify({\n      ...otherArgs.model && isUrl(otherArgs.model) ? omit(otherArgs, \"model\") : otherArgs\n    }),\n    ...credentials && { credentials },\n    signal: options?.signal\n  };\n  return { url, info };\n}\n\n// src/tasks/custom/request.ts\nasync function request(args, options) {\n  const { url, info } = await makeRequestOptions(args, options);\n  const response = await (options?.fetch ?? fetch)(url, info);\n  if (options?.retry_on_error !== false && response.status === 503 && !options?.wait_for_model) {\n    return request(args, {\n      ...options,\n      wait_for_model: true\n    });\n  }\n  if (!response.ok) {\n    if (response.headers.get(\"Content-Type\")?.startsWith(\"application/json\")) {\n      const output = await response.json();\n      if ([400, 422, 404, 500].includes(response.status) && options?.chatCompletion) {\n        throw new Error(`Server ${args.model} does not seem to support chat completion. Error: ${output.error}`);\n      }\n      if (output.error) {\n        throw new Error(JSON.stringify(output.error));\n      }\n    }\n    throw new Error(\"An error occurred while fetching the blob\");\n  }\n  if (response.headers.get(\"Content-Type\")?.startsWith(\"application/json\")) {\n    return await response.json();\n  }\n  return await response.blob();\n}\n\n// src/vendor/fetch-event-source/parse.ts\nfunction getLines(onLine) {\n  let buffer;\n  let position;\n  let fieldLength;\n  let discardTrailingNewline = false;\n  return function onChunk(arr) {\n    if (buffer === void 0) {\n      buffer = arr;\n      position = 0;\n      fieldLength = -1;\n    } else {\n      buffer = concat(buffer, arr);\n    }\n    const bufLength = buffer.length;\n    let lineStart = 0;\n    while (position < bufLength) {\n      if (discardTrailingNewline) {\n        if (buffer[position] === 10 /* NewLine */) {\n          lineStart = ++position;\n        }\n        discardTrailingNewline = false;\n      }\n      let lineEnd = -1;\n      for (; position < bufLength && lineEnd === -1; ++position) {\n        switch (buffer[position]) {\n          case 58 /* Colon */:\n            if (fieldLength === -1) {\n              fieldLength = position - lineStart;\n            }\n            break;\n          case 13 /* CarriageReturn */:\n            discardTrailingNewline = true;\n          case 10 /* NewLine */:\n            lineEnd = position;\n            break;\n        }\n      }\n      if (lineEnd === -1) {\n        break;\n      }\n      onLine(buffer.subarray(lineStart, lineEnd), fieldLength);\n      lineStart = position;\n      fieldLength = -1;\n    }\n    if (lineStart === bufLength) {\n      buffer = void 0;\n    } else if (lineStart !== 0) {\n      buffer = buffer.subarray(lineStart);\n      position -= lineStart;\n    }\n  };\n}\nfunction getMessages(onId, onRetry, onMessage) {\n  let message = newMessage();\n  const decoder = new TextDecoder();\n  return function onLine(line, fieldLength) {\n    if (line.length === 0) {\n      onMessage?.(message);\n      message = newMessage();\n    } else if (fieldLength > 0) {\n      const field = decoder.decode(line.subarray(0, fieldLength));\n      const valueOffset = fieldLength + (line[fieldLength + 1] === 32 /* Space */ ? 2 : 1);\n      const value = decoder.decode(line.subarray(valueOffset));\n      switch (field) {\n        case \"data\":\n          message.data = message.data ? message.data + \"\\n\" + value : value;\n          break;\n        case \"event\":\n          message.event = value;\n          break;\n        case \"id\":\n          onId(message.id = value);\n          break;\n        case \"retry\":\n          const retry = parseInt(value, 10);\n          if (!isNaN(retry)) {\n            onRetry(message.retry = retry);\n          }\n          break;\n      }\n    }\n  };\n}\nfunction concat(a, b) {\n  const res = new Uint8Array(a.length + b.length);\n  res.set(a);\n  res.set(b, a.length);\n  return res;\n}\nfunction newMessage() {\n  return {\n    data: \"\",\n    event: \"\",\n    id: \"\",\n    retry: void 0\n  };\n}\n\n// src/tasks/custom/streamingRequest.ts\nasync function* streamingRequest(args, options) {\n  const { url, info } = await makeRequestOptions({ ...args, stream: true }, options);\n  const response = await (options?.fetch ?? fetch)(url, info);\n  if (options?.retry_on_error !== false && response.status === 503 && !options?.wait_for_model) {\n    return yield* streamingRequest(args, {\n      ...options,\n      wait_for_model: true\n    });\n  }\n  if (!response.ok) {\n    if (response.headers.get(\"Content-Type\")?.startsWith(\"application/json\")) {\n      const output = await response.json();\n      if ([400, 422, 404, 500].includes(response.status) && options?.chatCompletion) {\n        throw new Error(`Server ${args.model} does not seem to support chat completion. Error: ${output.error}`);\n      }\n      if (output.error) {\n        throw new Error(output.error);\n      }\n    }\n    throw new Error(`Server response contains error: ${response.status}`);\n  }\n  if (!response.headers.get(\"content-type\")?.startsWith(\"text/event-stream\")) {\n    throw new Error(\n      `Server does not support event stream content type, it returned ` + response.headers.get(\"content-type\")\n    );\n  }\n  if (!response.body) {\n    return;\n  }\n  const reader = response.body.getReader();\n  let events = [];\n  const onEvent = (event) => {\n    events.push(event);\n  };\n  const onChunk = getLines(\n    getMessages(\n      () => {\n      },\n      () => {\n      },\n      onEvent\n    )\n  );\n  try {\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done)\n        return;\n      onChunk(value);\n      for (const event of events) {\n        if (event.data.length > 0) {\n          if (event.data === \"[DONE]\") {\n            return;\n          }\n          const data = JSON.parse(event.data);\n          if (typeof data === \"object\" && data !== null && \"error\" in data) {\n            throw new Error(data.error);\n          }\n          yield data;\n        }\n      }\n      events = [];\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\n// src/lib/InferenceOutputError.ts\nvar InferenceOutputError = class extends TypeError {\n  constructor(message) {\n    super(\n      `Invalid inference output: ${message}. Use the 'request' method with the same parameters to do a custom call with no type checking.`\n    );\n    this.name = \"InferenceOutputError\";\n  }\n};\n\n// src/tasks/audio/audioClassification.ts\nasync function audioClassification(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"audio-classification\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x.label === \"string\" && typeof x.score === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/audio/automaticSpeechRecognition.ts\nasync function automaticSpeechRecognition(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"automatic-speech-recognition\"\n  });\n  const isValidOutput = typeof res?.text === \"string\";\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected {text: string}\");\n  }\n  return res;\n}\n\n// src/tasks/audio/textToSpeech.ts\nasync function textToSpeech(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"text-to-speech\"\n  });\n  const isValidOutput = res && res instanceof Blob;\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Blob\");\n  }\n  return res;\n}\n\n// src/tasks/audio/audioToAudio.ts\nasync function audioToAudio(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"audio-to-audio\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every(\n    (x) => typeof x.label === \"string\" && typeof x.blob === \"string\" && typeof x[\"content-type\"] === \"string\"\n  );\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, blob: string, content-type: string}>\");\n  }\n  return res;\n}\n\n// src/tasks/cv/imageClassification.ts\nasync function imageClassification(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"image-classification\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x.label === \"string\" && typeof x.score === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/cv/imageSegmentation.ts\nasync function imageSegmentation(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"image-segmentation\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x.label === \"string\" && typeof x.mask === \"string\" && typeof x.score === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, mask: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/cv/imageToText.ts\nasync function imageToText(args, options) {\n  const res = (await request(args, {\n    ...options,\n    taskHint: \"image-to-text\"\n  }))?.[0];\n  if (typeof res?.generated_text !== \"string\") {\n    throw new InferenceOutputError(\"Expected {generated_text: string}\");\n  }\n  return res;\n}\n\n// src/tasks/cv/objectDetection.ts\nasync function objectDetection(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"object-detection\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every(\n    (x) => typeof x.label === \"string\" && typeof x.score === \"number\" && typeof x.box.xmin === \"number\" && typeof x.box.ymin === \"number\" && typeof x.box.xmax === \"number\" && typeof x.box.ymax === \"number\"\n  );\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\n      \"Expected Array<{label:string; score:number; box:{xmin:number; ymin:number; xmax:number; ymax:number}}>\"\n    );\n  }\n  return res;\n}\n\n// src/tasks/cv/textToImage.ts\nasync function textToImage(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"text-to-image\"\n  });\n  const isValidOutput = res && res instanceof Blob;\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Blob\");\n  }\n  return res;\n}\n\n// src/utils/base64FromBytes.ts\nfunction base64FromBytes(arr) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin = [];\n    arr.forEach((byte) => {\n      bin.push(String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\n\n// src/tasks/cv/imageToImage.ts\nasync function imageToImage(args, options) {\n  let reqArgs;\n  if (!args.parameters) {\n    reqArgs = {\n      accessToken: args.accessToken,\n      model: args.model,\n      data: args.inputs\n    };\n  } else {\n    reqArgs = {\n      ...args,\n      inputs: base64FromBytes(\n        new Uint8Array(args.inputs instanceof ArrayBuffer ? args.inputs : await args.inputs.arrayBuffer())\n      )\n    };\n  }\n  const res = await request(reqArgs, {\n    ...options,\n    taskHint: \"image-to-image\"\n  });\n  const isValidOutput = res && res instanceof Blob;\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Blob\");\n  }\n  return res;\n}\n\n// src/tasks/cv/zeroShotImageClassification.ts\nasync function zeroShotImageClassification(args, options) {\n  const reqArgs = {\n    ...args,\n    inputs: {\n      image: base64FromBytes(\n        new Uint8Array(\n          args.inputs.image instanceof ArrayBuffer ? args.inputs.image : await args.inputs.image.arrayBuffer()\n        )\n      )\n    }\n  };\n  const res = await request(reqArgs, {\n    ...options,\n    taskHint: \"zero-shot-image-classification\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x.label === \"string\" && typeof x.score === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/featureExtraction.ts\nasync function featureExtraction(args, options) {\n  const defaultTask = args.model ? await getDefaultTask(args.model, args.accessToken, options) : void 0;\n  const res = await request(args, {\n    ...options,\n    taskHint: \"feature-extraction\",\n    ...defaultTask === \"sentence-similarity\" && { forceTask: \"feature-extraction\" }\n  });\n  let isValidOutput = true;\n  const isNumArrayRec = (arr, maxDepth, curDepth = 0) => {\n    if (curDepth > maxDepth)\n      return false;\n    if (arr.every((x) => Array.isArray(x))) {\n      return arr.every((x) => isNumArrayRec(x, maxDepth, curDepth + 1));\n    } else {\n      return arr.every((x) => typeof x === \"number\");\n    }\n  };\n  isValidOutput = Array.isArray(res) && isNumArrayRec(res, 3, 0);\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<number[][][] | number[][] | number[] | number>\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/fillMask.ts\nasync function fillMask(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"fill-mask\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every(\n    (x) => typeof x.score === \"number\" && typeof x.sequence === \"string\" && typeof x.token === \"number\" && typeof x.token_str === \"string\"\n  );\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\n      \"Expected Array<{score: number, sequence: string, token: number, token_str: string}>\"\n    );\n  }\n  return res;\n}\n\n// src/tasks/nlp/questionAnswering.ts\nasync function questionAnswering(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"question-answering\"\n  });\n  const isValidOutput = typeof res === \"object\" && !!res && typeof res.answer === \"string\" && typeof res.end === \"number\" && typeof res.score === \"number\" && typeof res.start === \"number\";\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected {answer: string, end: number, score: number, start: number}\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/sentenceSimilarity.ts\nasync function sentenceSimilarity(args, options) {\n  const defaultTask = args.model ? await getDefaultTask(args.model, args.accessToken, options) : void 0;\n  const res = await request(args, {\n    ...options,\n    taskHint: \"sentence-similarity\",\n    ...defaultTask === \"feature-extraction\" && { forceTask: \"sentence-similarity\" }\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected number[]\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/summarization.ts\nasync function summarization(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"summarization\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x?.summary_text === \"string\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{summary_text: string}>\");\n  }\n  return res?.[0];\n}\n\n// src/tasks/nlp/tableQuestionAnswering.ts\nasync function tableQuestionAnswering(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"table-question-answering\"\n  });\n  const isValidOutput = typeof res?.aggregator === \"string\" && typeof res.answer === \"string\" && Array.isArray(res.cells) && res.cells.every((x) => typeof x === \"string\") && Array.isArray(res.coordinates) && res.coordinates.every((coord) => Array.isArray(coord) && coord.every((x) => typeof x === \"number\"));\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\n      \"Expected {aggregator: string, answer: string, cells: string[], coordinates: number[][]}\"\n    );\n  }\n  return res;\n}\n\n// src/tasks/nlp/textClassification.ts\nasync function textClassification(args, options) {\n  const res = (await request(args, {\n    ...options,\n    taskHint: \"text-classification\"\n  }))?.[0];\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x?.label === \"string\" && typeof x.score === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/utils/toArray.ts\nfunction toArray(obj) {\n  if (Array.isArray(obj)) {\n    return obj;\n  }\n  return [obj];\n}\n\n// src/tasks/nlp/textGeneration.ts\nasync function textGeneration(args, options) {\n  const res = toArray(\n    await request(args, {\n      ...options,\n      taskHint: \"text-generation\"\n    })\n  );\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x?.generated_text === \"string\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{generated_text: string}>\");\n  }\n  return res?.[0];\n}\n\n// src/tasks/nlp/textGenerationStream.ts\nasync function* textGenerationStream(args, options) {\n  yield* streamingRequest(args, {\n    ...options,\n    taskHint: \"text-generation\"\n  });\n}\n\n// src/tasks/nlp/tokenClassification.ts\nasync function tokenClassification(args, options) {\n  const res = toArray(\n    await request(args, {\n      ...options,\n      taskHint: \"token-classification\"\n    })\n  );\n  const isValidOutput = Array.isArray(res) && res.every(\n    (x) => typeof x.end === \"number\" && typeof x.entity_group === \"string\" && typeof x.score === \"number\" && typeof x.start === \"number\" && typeof x.word === \"string\"\n  );\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\n      \"Expected Array<{end: number, entity_group: string, score: number, start: number, word: string}>\"\n    );\n  }\n  return res;\n}\n\n// src/tasks/nlp/translation.ts\nasync function translation(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"translation\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x?.translation_text === \"string\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected type Array<{translation_text: string}>\");\n  }\n  return res?.length === 1 ? res?.[0] : res;\n}\n\n// src/tasks/nlp/zeroShotClassification.ts\nasync function zeroShotClassification(args, options) {\n  const res = toArray(\n    await request(args, {\n      ...options,\n      taskHint: \"zero-shot-classification\"\n    })\n  );\n  const isValidOutput = Array.isArray(res) && res.every(\n    (x) => Array.isArray(x.labels) && x.labels.every((_label) => typeof _label === \"string\") && Array.isArray(x.scores) && x.scores.every((_score) => typeof _score === \"number\") && typeof x.sequence === \"string\"\n  );\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{labels: string[], scores: number[], sequence: string}>\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/chatCompletion.ts\nasync function chatCompletion(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"text-generation\",\n    chatCompletion: true\n  });\n  const isValidOutput = typeof res === \"object\" && Array.isArray(res?.choices) && typeof res?.created === \"number\" && typeof res?.id === \"string\" && typeof res?.model === \"string\" && typeof res?.system_fingerprint === \"string\" && typeof res?.usage === \"object\";\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected ChatCompletionOutput\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/chatCompletionStream.ts\nasync function* chatCompletionStream(args, options) {\n  yield* streamingRequest(args, {\n    ...options,\n    taskHint: \"text-generation\",\n    chatCompletion: true\n  });\n}\n\n// src/tasks/multimodal/documentQuestionAnswering.ts\nasync function documentQuestionAnswering(args, options) {\n  const reqArgs = {\n    ...args,\n    inputs: {\n      question: args.inputs.question,\n      // convert Blob or ArrayBuffer to base64\n      image: base64FromBytes(\n        new Uint8Array(\n          args.inputs.image instanceof ArrayBuffer ? args.inputs.image : await args.inputs.image.arrayBuffer()\n        )\n      )\n    }\n  };\n  const res = toArray(\n    await request(reqArgs, {\n      ...options,\n      taskHint: \"document-question-answering\"\n    })\n  )?.[0];\n  const isValidOutput = typeof res?.answer === \"string\" && (typeof res.end === \"number\" || typeof res.end === \"undefined\") && (typeof res.score === \"number\" || typeof res.score === \"undefined\") && (typeof res.start === \"number\" || typeof res.start === \"undefined\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{answer: string, end?: number, score?: number, start?: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/multimodal/visualQuestionAnswering.ts\nasync function visualQuestionAnswering(args, options) {\n  const reqArgs = {\n    ...args,\n    inputs: {\n      question: args.inputs.question,\n      // convert Blob or ArrayBuffer to base64\n      image: base64FromBytes(\n        new Uint8Array(\n          args.inputs.image instanceof ArrayBuffer ? args.inputs.image : await args.inputs.image.arrayBuffer()\n        )\n      )\n    }\n  };\n  const res = (await request(reqArgs, {\n    ...options,\n    taskHint: \"visual-question-answering\"\n  }))?.[0];\n  const isValidOutput = typeof res?.answer === \"string\" && typeof res.score === \"number\";\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{answer: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/tabular/tabularRegression.ts\nasync function tabularRegression(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"tabular-regression\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected number[]\");\n  }\n  return res;\n}\n\n// src/tasks/tabular/tabularClassification.ts\nasync function tabularClassification(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"tabular-classification\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected number[]\");\n  }\n  return res;\n}\n\n// src/HfInference.ts\nvar HfInference = class {\n  accessToken;\n  defaultOptions;\n  constructor(accessToken = \"\", defaultOptions = {}) {\n    this.accessToken = accessToken;\n    this.defaultOptions = defaultOptions;\n    for (const [name, fn] of Object.entries(tasks_exports)) {\n      Object.defineProperty(this, name, {\n        enumerable: false,\n        value: (params, options) => (\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          fn({ ...params, accessToken }, { ...defaultOptions, ...options })\n        )\n      });\n    }\n  }\n  /**\n   * Returns copy of HfInference tied to a specified endpoint.\n   */\n  endpoint(endpointUrl) {\n    return new HfInferenceEndpoint(endpointUrl, this.accessToken, this.defaultOptions);\n  }\n};\nvar HfInferenceEndpoint = class {\n  constructor(endpointUrl, accessToken = \"\", defaultOptions = {}) {\n    accessToken;\n    defaultOptions;\n    for (const [name, fn] of Object.entries(tasks_exports)) {\n      Object.defineProperty(this, name, {\n        enumerable: false,\n        value: (params, options) => (\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          fn({ ...params, accessToken, endpointUrl }, { ...defaultOptions, ...options })\n        )\n      });\n    }\n  }\n};\nexport {\n  HfInference,\n  HfInferenceEndpoint,\n  InferenceOutputError,\n  audioClassification,\n  audioToAudio,\n  automaticSpeechRecognition,\n  chatCompletion,\n  chatCompletionStream,\n  documentQuestionAnswering,\n  featureExtraction,\n  fillMask,\n  imageClassification,\n  imageSegmentation,\n  imageToImage,\n  imageToText,\n  objectDetection,\n  questionAnswering,\n  request,\n  sentenceSimilarity,\n  streamingRequest,\n  summarization,\n  tableQuestionAnswering,\n  tabularClassification,\n  tabularRegression,\n  textClassification,\n  textGeneration,\n  textGenerationStream,\n  textToImage,\n  textToSpeech,\n  tokenClassification,\n  translation,\n  visualQuestionAnswering,\n  zeroShotClassification,\n  zeroShotImageClassification\n};\n","export const uid = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (character) => {\n        const randomValue = Math.random() * 16 | 0;\n        const value = character == 'x' ? randomValue : (randomValue & 0x3 | 0x8);\n        return value.toString(16);\n    });\n};\n","export const warn = (message: unknown) => {\n    if (typeof message === 'string') {\n        console.warn(`[nlux] ${message}`);\n        return;\n    }\n\n    if (message && typeof message.toString === 'function') {\n        console.warn(`[nlux] ${message.toString()}`);\n        return;\n    }\n\n    console.warn('[nlux]');\n    console.log(JSON.stringify(message, null, 2));\n};\n\nconst warnedMessages: string[] = [];\nexport const warnOnce = (message: string) => {\n    if (warnedMessages.includes(message)) {\n        return;\n    }\n\n    warnedMessages.push(message);\n    warn(message);\n};\n","import {NLErrorId} from '@shared/types/exceptions/errors';\n\nexport const adapterErrorToExceptionId = (error: unknown): NLErrorId | null => {\n    if (typeof error === 'object' && error !== null) {\n        const errorAsObject = error as Record<string, unknown>;\n        if (errorAsObject.code === 'invalid_api_key') {\n            return 'invalid-api-key';\n        }\n\n        if (\n            errorAsObject.message && typeof errorAsObject.message === 'string' &&\n            errorAsObject.message.toLowerCase().includes('connection error')\n        ) {\n            return 'connection-error';\n        }\n    }\n\n    return null;\n};\n","import {HfInference} from '@huggingface/inference';\nimport {\n    ChatAdapterExtras,\n    DataTransferMode,\n    StandardAdapterInfo,\n    StandardChatAdapter,\n    StreamingAdapterObserver,\n} from '@nlux/core';\nimport {NluxError, NluxValidationError} from '@shared/types/error';\nimport {uid} from '@shared/utils/uid';\nimport {warn} from '@shared/utils/warn';\nimport {adapterErrorToExceptionId} from '../../utils/adapterErrorToExceptionId';\nimport {ChatAdapterOptions} from '../types/chatAdapterOptions';\n\nexport class HfChatAdapterImpl<AiMsg> implements StandardChatAdapter<AiMsg> {\n    static defaultDataTransferMode: DataTransferMode = 'batch';\n    static defaultMaxNewTokens = 500;\n\n    private readonly __instanceId: string;\n\n    private inference: HfInference;\n    private readonly options: ChatAdapterOptions<AiMsg>;\n\n    constructor(options: ChatAdapterOptions<AiMsg>) {\n        if (!options.model && !options.endpoint) {\n            throw new NluxValidationError({\n                source: this.constructor.name,\n                message: 'when creating the Hugging Face adapter, you must set either the model or the endpoint '\n                    + 'using the \"endpoint\" option!',\n            });\n        }\n\n        this.__instanceId = `${this.info.id}-${uid()}`;\n\n        this.options = {...options};\n        this.inference = new HfInference(options.authToken);\n    }\n\n    get dataTransferMode(): DataTransferMode {\n        return this.options.dataTransferMode ?? HfChatAdapterImpl.defaultDataTransferMode;\n    }\n\n    get id(): string {\n        return this.__instanceId;\n    }\n\n    get info(): StandardAdapterInfo {\n        return {\n            id: 'hugging-face-adapter',\n            capabilities: {\n                chat: true,\n                fileUpload: false,\n                textToSpeech: false,\n                speechToText: false,\n            },\n        };\n    }\n\n    async batchText(message: string): Promise<string | object | undefined> {\n        if (!this.options.model && !this.options.endpoint) {\n            throw new NluxValidationError({\n                source: this.constructor.name,\n                message: 'Unable to send message! When sending a message to the Hugging Face API, you must set either '\n                    + 'the model using the \"model\" option or the endpoint using the \"endpoint\" option!',\n            });\n        }\n\n        const parameters = {\n            inputs: message as string,\n            parameters: {\n                max_new_tokens: this.options.maxNewTokens ?? HfChatAdapterImpl.defaultMaxNewTokens,\n            },\n        };\n\n        try {\n            let output = undefined;\n            if (this.options.endpoint) {\n                const endpoint = this.inference.endpoint(this.options.endpoint);\n                output = await endpoint.textGeneration(parameters);\n            } else {\n                output = await this.inference.textGeneration({\n                    model: this.options.model,\n                    ...parameters,\n                });\n            }\n\n            return output;\n        } catch (error) {\n            const message = (error as Error).message\n                || 'An error occurred while sending the message to the Hugging Face API';\n\n            throw new NluxError({\n                source: this.constructor.name,\n                message,\n                exceptionId: adapterErrorToExceptionId(error) ?? undefined,\n            });\n        }\n    }\n\n    preProcessAiBatchedMessage(message: string | object | undefined, extras: ChatAdapterExtras<AiMsg>): AiMsg | undefined {\n        throw new Error('Method not implemented.');\n    }\n\n    preProcessAiStreamedChunk(chunk: string | object | undefined, extras: ChatAdapterExtras<AiMsg>): AiMsg | undefined {\n        throw new Error('Method not implemented.');\n    }\n\n    streamText(\n        message: string,\n        observer: StreamingAdapterObserver<string | object | undefined>,\n    ) {\n        Promise.resolve().then(async () => {\n            if (!this.options.model && !this.options.endpoint) {\n                throw new NluxValidationError({\n                    source: this.constructor.name,\n                    message: 'Unable to send message! When sending a message to the Hugging Face API, you must set either '\n                        + 'the model using the \"model\" option or the endpoint using the \"endpoint\" option!',\n                });\n            }\n\n            const readyMessage = await this.encode(message);\n            const parameters = {\n                inputs: readyMessage,\n                parameters: {\n                    max_new_tokens: this.options.maxNewTokens ?? HfChatAdapterImpl.defaultMaxNewTokens,\n                },\n            };\n\n            let output: AsyncGenerator<unknown> | undefined = undefined;\n\n            try {\n                if (this.options.endpoint) {\n                    const endpoint = this.inference.endpoint(this.options.endpoint);\n                    output = endpoint.textGenerationStream(parameters);\n                } else {\n                    output = this.inference.textGenerationStream({\n                        model: this.options.model,\n                        ...parameters,\n                    });\n                }\n\n                while (true) {\n                    if (!output) {\n                        break;\n                    }\n\n                    const result = await output.next();\n                    const {done, value} = result;\n                    if (done) {\n                        break;\n                    }\n\n                    observer.next(\n                        await this.decode((value as Record<string, unknown> | undefined)?.token) as string, // We are forced to cast here!\n                    );\n                }\n\n                observer.complete();\n            } catch (error) {\n                const errorTyped = error as Error;\n                observer.error(errorTyped);\n                warn(\n                    'An error occurred while sending the message to the Hugging Face streaming API: \\n'\n                    + errorTyped.message,\n                );\n            }\n        });\n    }\n\n    private async decode(payload: unknown): Promise<AiMsg> {\n        const output = (() => {\n            if (typeof payload === 'string') {\n                return payload;\n            }\n\n            if (Array.isArray(payload)) {\n                if (payload.length === 0) {\n                    return '';\n                }\n\n                const responseToConsider = payload[0];\n                if (\n                    typeof responseToConsider === 'object' && responseToConsider &&\n                    typeof responseToConsider.generated_text === 'string'\n                ) {\n                    return responseToConsider.generated_text;\n                }\n            }\n\n            const generated_text = payload\n                ? (payload as Record<string, unknown>).generated_text\n                : undefined;\n\n            if (typeof generated_text === 'string') {\n                return generated_text;\n            }\n\n            const text = payload && typeof payload === 'object' && 'text' in payload\n                ? (payload as {text: string}).text\n                : undefined;\n\n            if (text === 'string') {\n                return text;\n            }\n\n            return '';\n        })();\n\n        const {preProcessors: {output: outputPreProcessor} = {}} = this.options;\n        if (outputPreProcessor) {\n            return Promise.resolve(outputPreProcessor(output));\n        } else {\n            return Promise.resolve(output);\n        }\n    }\n\n    private async encode(message: string): Promise<string> {\n        const messageAsAny = message as unknown;\n        const {preProcessors: {input: inputPreProcessor} = {}} = this.options;\n        if (inputPreProcessor && messageAsAny) {\n            if (typeof messageAsAny === 'string') {\n                return inputPreProcessor(messageAsAny, this.options);\n            } else {\n                warn(\n                    'The input pre-processor function was provided, but the message is not a string! ' +\n                    'Input pre-processor will not be applied.',\n                );\n            }\n        }\n\n        return message;\n    }\n}\n","import {DataTransferMode} from '@nlux/core';\nimport {NluxUsageError, NluxValidationError} from '@shared/types/error';\nimport {HfChatAdapterImpl} from '../adapter/chatAdapter';\nimport {HfInputPreProcessor} from '../types/inputPreProcessor';\nimport {HfOutputPreProcessor} from '../types/outputPreProcessor';\nimport {ChatAdapterBuilder} from './builder';\n\nexport class ChatAdapterBuilderImpl<AiMsg> implements ChatAdapterBuilder<AiMsg> {\n    private theAuthToken: string | null = null;\n    private theDataTransferMode: DataTransferMode = 'stream';\n    private theEndpoint: string | null = null;\n    private theInputPreProcessor: HfInputPreProcessor<AiMsg> | null = null;\n    private theMaxNewTokens: number | null = null;\n    private theModel: string | null = null;\n    private theOutputPreProcessor: HfOutputPreProcessor<AiMsg> | null = null;\n    private theSystemMessage: string | null = null;\n\n    private withDataTransferModeCalled = false;\n\n    create(): HfChatAdapterImpl<AiMsg> {\n        if (!this.theModel && !this.theEndpoint) {\n            throw new NluxValidationError({\n                source: this.constructor.name,\n                message: 'You must provide a model or an endpoint using the \"withModel()\" method or the ' +\n                    '\"withEndpoint()\" method!',\n            });\n        }\n\n        return new HfChatAdapterImpl({\n            dataTransferMode: this.theDataTransferMode,\n            model: this.theModel ?? undefined,\n            endpoint: this.theEndpoint ?? undefined,\n            authToken: this.theAuthToken ?? undefined,\n            preProcessors: {\n                input: this.theInputPreProcessor ?? undefined,\n                output: this.theOutputPreProcessor ?? undefined,\n            },\n            maxNewTokens: this.theMaxNewTokens ?? undefined,\n            systemMessage: this.theSystemMessage ?? undefined,\n        });\n    }\n\n    withAuthToken(authToken: string): ChatAdapterBuilder<AiMsg> {\n        if (this.theAuthToken !== null) {\n            throw new NluxUsageError({\n                source: this.constructor.name,\n                message: 'Cannot set the auth token more than once',\n            });\n        }\n\n        this.theAuthToken = authToken;\n        return this;\n    }\n\n    withDataTransferMode(mode: DataTransferMode): ChatAdapterBuilder<AiMsg> {\n        if (this.withDataTransferModeCalled) {\n            throw new NluxUsageError({\n                source: this.constructor.name,\n                message: 'Cannot set the data loading mode more than once',\n            });\n        }\n\n        this.theDataTransferMode = mode;\n        this.withDataTransferModeCalled = true;\n        return this;\n    }\n\n    withEndpoint(endpoint: string): ChatAdapterBuilder<AiMsg> {\n        if (this.theEndpoint !== null) {\n            throw new NluxUsageError({\n                source: this.constructor.name,\n                message: 'Cannot set the endpoint because a model or an endpoint has already been set',\n            });\n        }\n\n        this.theEndpoint = endpoint;\n        return this;\n    }\n\n    withInputPreProcessor(inputPreProcessor: HfInputPreProcessor<AiMsg>): ChatAdapterBuilder<AiMsg> {\n        if (this.theInputPreProcessor !== null) {\n            throw new NluxUsageError({\n                source: this.constructor.name,\n                message: 'Cannot set the input pre-processor more than once',\n            });\n        }\n\n        this.theInputPreProcessor = inputPreProcessor;\n        return this;\n    }\n\n    withMaxNewTokens(maxNewTokens: number): ChatAdapterBuilder<AiMsg> {\n        if (this.theMaxNewTokens !== null) {\n            throw new NluxUsageError({\n                source: this.constructor.name,\n                message: 'Cannot set the max new tokens more than once',\n            });\n        }\n\n        this.theMaxNewTokens = maxNewTokens;\n        return this;\n    }\n\n    withModel(model: string) {\n        if (this.theModel !== null) {\n            throw new NluxUsageError({\n                source: this.constructor.name,\n                message: 'Cannot set the model because a model or an endpoint has already been set',\n            });\n        }\n\n        this.theModel = model;\n        return this;\n    }\n\n    withOutputPreProcessor(outputPreProcessor: HfOutputPreProcessor<AiMsg>): ChatAdapterBuilder<AiMsg> {\n        if (this.theOutputPreProcessor !== null) {\n            throw new NluxUsageError({\n                source: this.constructor.name,\n                message: 'Cannot set the output pre-processor more than once',\n            });\n        }\n\n        this.theOutputPreProcessor = outputPreProcessor;\n        return this;\n    }\n\n    withSystemMessage(message: string): ChatAdapterBuilder<AiMsg> {\n        if (this.theSystemMessage !== null) {\n            throw new NluxUsageError({\n                source: this.constructor.name,\n                message: 'Cannot set the system message more than once',\n            });\n        }\n\n        this.theSystemMessage = message;\n        return this;\n    }\n}\n","import {ChatAdapterBuilder} from './hf/builder/builder';\nimport {ChatAdapterBuilderImpl} from './hf/builder/builderImpl';\n\nexport const createChatAdapter = <AiMsg = string>(): ChatAdapterBuilder<AiMsg> => {\n    return new ChatAdapterBuilderImpl<AiMsg>();\n};\n","import {HfInputPreProcessor} from '../types/inputPreProcessor';\nimport {HfOutputPreProcessor} from '../types/outputPreProcessor';\n\nexport const llama2InputPreProcessor: HfInputPreProcessor<string> = (\n    input,\n    adapterOptions,\n) => {\n    const systemMessage = adapterOptions?.systemMessage\n        ?? 'You are a helpful assistant. You keep your answers short.';\n\n    return (\n        `<s> [INST] <<SYS>> ${systemMessage} <</SYS>> </s>` +\n        `<s> [INST] ${input} [/INST]`\n    );\n};\n\nexport const llama2OutputPreProcessor: HfOutputPreProcessor<string> = (\n    output,\n) => {\n    // Strip any HTML-like tags from the output\n    if (!output) {\n        return '';\n    }\n\n    return output.replace(/<[^>]*>/g, '');\n};"],"names":["__publicField","__defProp","message"],"mappings":"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","x_google_ignoreList":[1]}