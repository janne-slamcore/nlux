{"version":3,"file":"hf.js","sources":["../../../../packages/shared/src/types/error.ts","../../../../node_modules/@huggingface/inference/dist/index.js","../../../../packages/shared/src/utils/uid.ts","../../../../packages/shared/src/utils/warn.ts","../../../../packages/js/hf/src/utils/adapterErrorToExceptionId.ts","../../../../packages/js/hf/src/hf/adapter/chatAdapter.ts","../../../../packages/js/hf/src/hf/builder/builderImpl.ts","../../../../packages/js/hf/src/createChatAdapter.ts","../../../../packages/js/hf/src/hf/preProcessors/llama2.ts"],"sourcesContent":["import {NLErrorId} from './exceptions/errors';\n\nexport type NluxRawError = {\n    readonly message?: string;\n    readonly type?: string;\n    readonly source?: string;\n    readonly exceptionId?: NLErrorId;\n};\n\nexport class NluxError extends Error {\n    readonly exceptionId?: NLErrorId;\n    readonly message: string;\n    readonly source?: string;\n    readonly type: string;\n\n    constructor(rawError: NluxRawError = {}) {\n        super(rawError.message);\n\n        this.message = rawError.message ?? '';\n        this.source = rawError.source;\n        this.type = this.constructor.name;\n        this.exceptionId = rawError.exceptionId;\n    }\n}\n\nexport class NluxUsageError extends NluxError {\n}\n\nexport class NluxValidationError extends NluxError {\n}\n\nexport class NluxRenderingError extends NluxError {\n}\n","var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/tasks/index.ts\nvar tasks_exports = {};\n__export(tasks_exports, {\n  audioClassification: () => audioClassification,\n  audioToAudio: () => audioToAudio,\n  automaticSpeechRecognition: () => automaticSpeechRecognition,\n  chatCompletion: () => chatCompletion,\n  chatCompletionStream: () => chatCompletionStream,\n  documentQuestionAnswering: () => documentQuestionAnswering,\n  featureExtraction: () => featureExtraction,\n  fillMask: () => fillMask,\n  imageClassification: () => imageClassification,\n  imageSegmentation: () => imageSegmentation,\n  imageToImage: () => imageToImage,\n  imageToText: () => imageToText,\n  objectDetection: () => objectDetection,\n  questionAnswering: () => questionAnswering,\n  request: () => request,\n  sentenceSimilarity: () => sentenceSimilarity,\n  streamingRequest: () => streamingRequest,\n  summarization: () => summarization,\n  tableQuestionAnswering: () => tableQuestionAnswering,\n  tabularClassification: () => tabularClassification,\n  tabularRegression: () => tabularRegression,\n  textClassification: () => textClassification,\n  textGeneration: () => textGeneration,\n  textGenerationStream: () => textGenerationStream,\n  textToImage: () => textToImage,\n  textToSpeech: () => textToSpeech,\n  tokenClassification: () => tokenClassification,\n  translation: () => translation,\n  visualQuestionAnswering: () => visualQuestionAnswering,\n  zeroShotClassification: () => zeroShotClassification,\n  zeroShotImageClassification: () => zeroShotImageClassification\n});\n\n// src/utils/pick.ts\nfunction pick(o, props) {\n  return Object.assign(\n    {},\n    ...props.map((prop) => {\n      if (o[prop] !== void 0) {\n        return { [prop]: o[prop] };\n      }\n    })\n  );\n}\n\n// src/utils/typedInclude.ts\nfunction typedInclude(arr, v) {\n  return arr.includes(v);\n}\n\n// src/utils/omit.ts\nfunction omit(o, props) {\n  const propsArr = Array.isArray(props) ? props : [props];\n  const letsKeep = Object.keys(o).filter((prop) => !typedInclude(propsArr, prop));\n  return pick(o, letsKeep);\n}\n\n// src/lib/isUrl.ts\nfunction isUrl(modelOrUrl) {\n  return /^http(s?):/.test(modelOrUrl) || modelOrUrl.startsWith(\"/\");\n}\n\n// src/lib/getDefaultTask.ts\nvar taskCache = /* @__PURE__ */ new Map();\nvar CACHE_DURATION = 10 * 60 * 1e3;\nvar MAX_CACHE_ITEMS = 1e3;\nvar HF_HUB_URL = \"https://huggingface.co\";\nasync function getDefaultTask(model, accessToken, options) {\n  if (isUrl(model)) {\n    return null;\n  }\n  const key = `${model}:${accessToken}`;\n  let cachedTask = taskCache.get(key);\n  if (cachedTask && cachedTask.date < new Date(Date.now() - CACHE_DURATION)) {\n    taskCache.delete(key);\n    cachedTask = void 0;\n  }\n  if (cachedTask === void 0) {\n    const modelTask = await (options?.fetch ?? fetch)(`${HF_HUB_URL}/api/models/${model}?expand[]=pipeline_tag`, {\n      headers: accessToken ? { Authorization: `Bearer ${accessToken}` } : {}\n    }).then((resp) => resp.json()).then((json) => json.pipeline_tag).catch(() => null);\n    if (!modelTask) {\n      return null;\n    }\n    cachedTask = { task: modelTask, date: /* @__PURE__ */ new Date() };\n    taskCache.set(key, { task: modelTask, date: /* @__PURE__ */ new Date() });\n    if (taskCache.size > MAX_CACHE_ITEMS) {\n      taskCache.delete(taskCache.keys().next().value);\n    }\n  }\n  return cachedTask.task;\n}\n\n// src/lib/makeRequestOptions.ts\nvar HF_INFERENCE_API_BASE_URL = \"https://api-inference.huggingface.co\";\nvar tasks = null;\nasync function makeRequestOptions(args, options) {\n  const { accessToken, endpointUrl, ...otherArgs } = args;\n  let { model } = args;\n  const {\n    forceTask: task,\n    includeCredentials,\n    taskHint,\n    wait_for_model,\n    use_cache,\n    dont_load_model,\n    chatCompletion: chatCompletion2\n  } = options ?? {};\n  const headers = {};\n  if (accessToken) {\n    headers[\"Authorization\"] = `Bearer ${accessToken}`;\n  }\n  if (!model && !tasks && taskHint) {\n    const res = await fetch(`${HF_HUB_URL}/api/tasks`);\n    if (res.ok) {\n      tasks = await res.json();\n    }\n  }\n  if (!model && tasks && taskHint) {\n    const taskInfo = tasks[taskHint];\n    if (taskInfo) {\n      model = taskInfo.models[0].id;\n    }\n  }\n  if (!model) {\n    throw new Error(\"No model provided, and no default model found for this task\");\n  }\n  const binary = \"data\" in args && !!args.data;\n  if (!binary) {\n    headers[\"Content-Type\"] = \"application/json\";\n  }\n  if (wait_for_model) {\n    headers[\"X-Wait-For-Model\"] = \"true\";\n  }\n  if (use_cache === false) {\n    headers[\"X-Use-Cache\"] = \"false\";\n  }\n  if (dont_load_model) {\n    headers[\"X-Load-Model\"] = \"0\";\n  }\n  let url = (() => {\n    if (endpointUrl && isUrl(model)) {\n      throw new TypeError(\"Both model and endpointUrl cannot be URLs\");\n    }\n    if (isUrl(model)) {\n      console.warn(\"Using a model URL is deprecated, please use the `endpointUrl` parameter instead\");\n      return model;\n    }\n    if (endpointUrl) {\n      return endpointUrl;\n    }\n    if (task) {\n      return `${HF_INFERENCE_API_BASE_URL}/pipeline/${task}/${model}`;\n    }\n    return `${HF_INFERENCE_API_BASE_URL}/models/${model}`;\n  })();\n  if (chatCompletion2 && !url.endsWith(\"/chat/completions\")) {\n    url += \"/v1/chat/completions\";\n  }\n  let credentials;\n  if (typeof includeCredentials === \"string\") {\n    credentials = includeCredentials;\n  } else if (includeCredentials === true) {\n    credentials = \"include\";\n  }\n  const info = {\n    headers,\n    method: \"POST\",\n    body: binary ? args.data : JSON.stringify({\n      ...otherArgs.model && isUrl(otherArgs.model) ? omit(otherArgs, \"model\") : otherArgs\n    }),\n    ...credentials && { credentials },\n    signal: options?.signal\n  };\n  return { url, info };\n}\n\n// src/tasks/custom/request.ts\nasync function request(args, options) {\n  const { url, info } = await makeRequestOptions(args, options);\n  const response = await (options?.fetch ?? fetch)(url, info);\n  if (options?.retry_on_error !== false && response.status === 503 && !options?.wait_for_model) {\n    return request(args, {\n      ...options,\n      wait_for_model: true\n    });\n  }\n  if (!response.ok) {\n    if (response.headers.get(\"Content-Type\")?.startsWith(\"application/json\")) {\n      const output = await response.json();\n      if ([400, 422, 404, 500].includes(response.status) && options?.chatCompletion) {\n        throw new Error(`Server ${args.model} does not seem to support chat completion. Error: ${output.error}`);\n      }\n      if (output.error) {\n        throw new Error(JSON.stringify(output.error));\n      }\n    }\n    throw new Error(\"An error occurred while fetching the blob\");\n  }\n  if (response.headers.get(\"Content-Type\")?.startsWith(\"application/json\")) {\n    return await response.json();\n  }\n  return await response.blob();\n}\n\n// src/vendor/fetch-event-source/parse.ts\nfunction getLines(onLine) {\n  let buffer;\n  let position;\n  let fieldLength;\n  let discardTrailingNewline = false;\n  return function onChunk(arr) {\n    if (buffer === void 0) {\n      buffer = arr;\n      position = 0;\n      fieldLength = -1;\n    } else {\n      buffer = concat(buffer, arr);\n    }\n    const bufLength = buffer.length;\n    let lineStart = 0;\n    while (position < bufLength) {\n      if (discardTrailingNewline) {\n        if (buffer[position] === 10 /* NewLine */) {\n          lineStart = ++position;\n        }\n        discardTrailingNewline = false;\n      }\n      let lineEnd = -1;\n      for (; position < bufLength && lineEnd === -1; ++position) {\n        switch (buffer[position]) {\n          case 58 /* Colon */:\n            if (fieldLength === -1) {\n              fieldLength = position - lineStart;\n            }\n            break;\n          case 13 /* CarriageReturn */:\n            discardTrailingNewline = true;\n          case 10 /* NewLine */:\n            lineEnd = position;\n            break;\n        }\n      }\n      if (lineEnd === -1) {\n        break;\n      }\n      onLine(buffer.subarray(lineStart, lineEnd), fieldLength);\n      lineStart = position;\n      fieldLength = -1;\n    }\n    if (lineStart === bufLength) {\n      buffer = void 0;\n    } else if (lineStart !== 0) {\n      buffer = buffer.subarray(lineStart);\n      position -= lineStart;\n    }\n  };\n}\nfunction getMessages(onId, onRetry, onMessage) {\n  let message = newMessage();\n  const decoder = new TextDecoder();\n  return function onLine(line, fieldLength) {\n    if (line.length === 0) {\n      onMessage?.(message);\n      message = newMessage();\n    } else if (fieldLength > 0) {\n      const field = decoder.decode(line.subarray(0, fieldLength));\n      const valueOffset = fieldLength + (line[fieldLength + 1] === 32 /* Space */ ? 2 : 1);\n      const value = decoder.decode(line.subarray(valueOffset));\n      switch (field) {\n        case \"data\":\n          message.data = message.data ? message.data + \"\\n\" + value : value;\n          break;\n        case \"event\":\n          message.event = value;\n          break;\n        case \"id\":\n          onId(message.id = value);\n          break;\n        case \"retry\":\n          const retry = parseInt(value, 10);\n          if (!isNaN(retry)) {\n            onRetry(message.retry = retry);\n          }\n          break;\n      }\n    }\n  };\n}\nfunction concat(a, b) {\n  const res = new Uint8Array(a.length + b.length);\n  res.set(a);\n  res.set(b, a.length);\n  return res;\n}\nfunction newMessage() {\n  return {\n    data: \"\",\n    event: \"\",\n    id: \"\",\n    retry: void 0\n  };\n}\n\n// src/tasks/custom/streamingRequest.ts\nasync function* streamingRequest(args, options) {\n  const { url, info } = await makeRequestOptions({ ...args, stream: true }, options);\n  const response = await (options?.fetch ?? fetch)(url, info);\n  if (options?.retry_on_error !== false && response.status === 503 && !options?.wait_for_model) {\n    return yield* streamingRequest(args, {\n      ...options,\n      wait_for_model: true\n    });\n  }\n  if (!response.ok) {\n    if (response.headers.get(\"Content-Type\")?.startsWith(\"application/json\")) {\n      const output = await response.json();\n      if ([400, 422, 404, 500].includes(response.status) && options?.chatCompletion) {\n        throw new Error(`Server ${args.model} does not seem to support chat completion. Error: ${output.error}`);\n      }\n      if (output.error) {\n        throw new Error(output.error);\n      }\n    }\n    throw new Error(`Server response contains error: ${response.status}`);\n  }\n  if (!response.headers.get(\"content-type\")?.startsWith(\"text/event-stream\")) {\n    throw new Error(\n      `Server does not support event stream content type, it returned ` + response.headers.get(\"content-type\")\n    );\n  }\n  if (!response.body) {\n    return;\n  }\n  const reader = response.body.getReader();\n  let events = [];\n  const onEvent = (event) => {\n    events.push(event);\n  };\n  const onChunk = getLines(\n    getMessages(\n      () => {\n      },\n      () => {\n      },\n      onEvent\n    )\n  );\n  try {\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done)\n        return;\n      onChunk(value);\n      for (const event of events) {\n        if (event.data.length > 0) {\n          if (event.data === \"[DONE]\") {\n            return;\n          }\n          const data = JSON.parse(event.data);\n          if (typeof data === \"object\" && data !== null && \"error\" in data) {\n            throw new Error(data.error);\n          }\n          yield data;\n        }\n      }\n      events = [];\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\n// src/lib/InferenceOutputError.ts\nvar InferenceOutputError = class extends TypeError {\n  constructor(message) {\n    super(\n      `Invalid inference output: ${message}. Use the 'request' method with the same parameters to do a custom call with no type checking.`\n    );\n    this.name = \"InferenceOutputError\";\n  }\n};\n\n// src/tasks/audio/audioClassification.ts\nasync function audioClassification(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"audio-classification\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x.label === \"string\" && typeof x.score === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/audio/automaticSpeechRecognition.ts\nasync function automaticSpeechRecognition(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"automatic-speech-recognition\"\n  });\n  const isValidOutput = typeof res?.text === \"string\";\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected {text: string}\");\n  }\n  return res;\n}\n\n// src/tasks/audio/textToSpeech.ts\nasync function textToSpeech(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"text-to-speech\"\n  });\n  const isValidOutput = res && res instanceof Blob;\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Blob\");\n  }\n  return res;\n}\n\n// src/tasks/audio/audioToAudio.ts\nasync function audioToAudio(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"audio-to-audio\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every(\n    (x) => typeof x.label === \"string\" && typeof x.blob === \"string\" && typeof x[\"content-type\"] === \"string\"\n  );\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, blob: string, content-type: string}>\");\n  }\n  return res;\n}\n\n// src/tasks/cv/imageClassification.ts\nasync function imageClassification(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"image-classification\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x.label === \"string\" && typeof x.score === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/cv/imageSegmentation.ts\nasync function imageSegmentation(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"image-segmentation\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x.label === \"string\" && typeof x.mask === \"string\" && typeof x.score === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, mask: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/cv/imageToText.ts\nasync function imageToText(args, options) {\n  const res = (await request(args, {\n    ...options,\n    taskHint: \"image-to-text\"\n  }))?.[0];\n  if (typeof res?.generated_text !== \"string\") {\n    throw new InferenceOutputError(\"Expected {generated_text: string}\");\n  }\n  return res;\n}\n\n// src/tasks/cv/objectDetection.ts\nasync function objectDetection(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"object-detection\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every(\n    (x) => typeof x.label === \"string\" && typeof x.score === \"number\" && typeof x.box.xmin === \"number\" && typeof x.box.ymin === \"number\" && typeof x.box.xmax === \"number\" && typeof x.box.ymax === \"number\"\n  );\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\n      \"Expected Array<{label:string; score:number; box:{xmin:number; ymin:number; xmax:number; ymax:number}}>\"\n    );\n  }\n  return res;\n}\n\n// src/tasks/cv/textToImage.ts\nasync function textToImage(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"text-to-image\"\n  });\n  const isValidOutput = res && res instanceof Blob;\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Blob\");\n  }\n  return res;\n}\n\n// src/utils/base64FromBytes.ts\nfunction base64FromBytes(arr) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin = [];\n    arr.forEach((byte) => {\n      bin.push(String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\n\n// src/tasks/cv/imageToImage.ts\nasync function imageToImage(args, options) {\n  let reqArgs;\n  if (!args.parameters) {\n    reqArgs = {\n      accessToken: args.accessToken,\n      model: args.model,\n      data: args.inputs\n    };\n  } else {\n    reqArgs = {\n      ...args,\n      inputs: base64FromBytes(\n        new Uint8Array(args.inputs instanceof ArrayBuffer ? args.inputs : await args.inputs.arrayBuffer())\n      )\n    };\n  }\n  const res = await request(reqArgs, {\n    ...options,\n    taskHint: \"image-to-image\"\n  });\n  const isValidOutput = res && res instanceof Blob;\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Blob\");\n  }\n  return res;\n}\n\n// src/tasks/cv/zeroShotImageClassification.ts\nasync function zeroShotImageClassification(args, options) {\n  const reqArgs = {\n    ...args,\n    inputs: {\n      image: base64FromBytes(\n        new Uint8Array(\n          args.inputs.image instanceof ArrayBuffer ? args.inputs.image : await args.inputs.image.arrayBuffer()\n        )\n      )\n    }\n  };\n  const res = await request(reqArgs, {\n    ...options,\n    taskHint: \"zero-shot-image-classification\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x.label === \"string\" && typeof x.score === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/featureExtraction.ts\nasync function featureExtraction(args, options) {\n  const defaultTask = args.model ? await getDefaultTask(args.model, args.accessToken, options) : void 0;\n  const res = await request(args, {\n    ...options,\n    taskHint: \"feature-extraction\",\n    ...defaultTask === \"sentence-similarity\" && { forceTask: \"feature-extraction\" }\n  });\n  let isValidOutput = true;\n  const isNumArrayRec = (arr, maxDepth, curDepth = 0) => {\n    if (curDepth > maxDepth)\n      return false;\n    if (arr.every((x) => Array.isArray(x))) {\n      return arr.every((x) => isNumArrayRec(x, maxDepth, curDepth + 1));\n    } else {\n      return arr.every((x) => typeof x === \"number\");\n    }\n  };\n  isValidOutput = Array.isArray(res) && isNumArrayRec(res, 3, 0);\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<number[][][] | number[][] | number[] | number>\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/fillMask.ts\nasync function fillMask(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"fill-mask\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every(\n    (x) => typeof x.score === \"number\" && typeof x.sequence === \"string\" && typeof x.token === \"number\" && typeof x.token_str === \"string\"\n  );\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\n      \"Expected Array<{score: number, sequence: string, token: number, token_str: string}>\"\n    );\n  }\n  return res;\n}\n\n// src/tasks/nlp/questionAnswering.ts\nasync function questionAnswering(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"question-answering\"\n  });\n  const isValidOutput = typeof res === \"object\" && !!res && typeof res.answer === \"string\" && typeof res.end === \"number\" && typeof res.score === \"number\" && typeof res.start === \"number\";\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected {answer: string, end: number, score: number, start: number}\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/sentenceSimilarity.ts\nasync function sentenceSimilarity(args, options) {\n  const defaultTask = args.model ? await getDefaultTask(args.model, args.accessToken, options) : void 0;\n  const res = await request(args, {\n    ...options,\n    taskHint: \"sentence-similarity\",\n    ...defaultTask === \"feature-extraction\" && { forceTask: \"sentence-similarity\" }\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected number[]\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/summarization.ts\nasync function summarization(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"summarization\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x?.summary_text === \"string\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{summary_text: string}>\");\n  }\n  return res?.[0];\n}\n\n// src/tasks/nlp/tableQuestionAnswering.ts\nasync function tableQuestionAnswering(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"table-question-answering\"\n  });\n  const isValidOutput = typeof res?.aggregator === \"string\" && typeof res.answer === \"string\" && Array.isArray(res.cells) && res.cells.every((x) => typeof x === \"string\") && Array.isArray(res.coordinates) && res.coordinates.every((coord) => Array.isArray(coord) && coord.every((x) => typeof x === \"number\"));\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\n      \"Expected {aggregator: string, answer: string, cells: string[], coordinates: number[][]}\"\n    );\n  }\n  return res;\n}\n\n// src/tasks/nlp/textClassification.ts\nasync function textClassification(args, options) {\n  const res = (await request(args, {\n    ...options,\n    taskHint: \"text-classification\"\n  }))?.[0];\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x?.label === \"string\" && typeof x.score === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/utils/toArray.ts\nfunction toArray(obj) {\n  if (Array.isArray(obj)) {\n    return obj;\n  }\n  return [obj];\n}\n\n// src/tasks/nlp/textGeneration.ts\nasync function textGeneration(args, options) {\n  const res = toArray(\n    await request(args, {\n      ...options,\n      taskHint: \"text-generation\"\n    })\n  );\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x?.generated_text === \"string\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{generated_text: string}>\");\n  }\n  return res?.[0];\n}\n\n// src/tasks/nlp/textGenerationStream.ts\nasync function* textGenerationStream(args, options) {\n  yield* streamingRequest(args, {\n    ...options,\n    taskHint: \"text-generation\"\n  });\n}\n\n// src/tasks/nlp/tokenClassification.ts\nasync function tokenClassification(args, options) {\n  const res = toArray(\n    await request(args, {\n      ...options,\n      taskHint: \"token-classification\"\n    })\n  );\n  const isValidOutput = Array.isArray(res) && res.every(\n    (x) => typeof x.end === \"number\" && typeof x.entity_group === \"string\" && typeof x.score === \"number\" && typeof x.start === \"number\" && typeof x.word === \"string\"\n  );\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\n      \"Expected Array<{end: number, entity_group: string, score: number, start: number, word: string}>\"\n    );\n  }\n  return res;\n}\n\n// src/tasks/nlp/translation.ts\nasync function translation(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"translation\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x?.translation_text === \"string\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected type Array<{translation_text: string}>\");\n  }\n  return res?.length === 1 ? res?.[0] : res;\n}\n\n// src/tasks/nlp/zeroShotClassification.ts\nasync function zeroShotClassification(args, options) {\n  const res = toArray(\n    await request(args, {\n      ...options,\n      taskHint: \"zero-shot-classification\"\n    })\n  );\n  const isValidOutput = Array.isArray(res) && res.every(\n    (x) => Array.isArray(x.labels) && x.labels.every((_label) => typeof _label === \"string\") && Array.isArray(x.scores) && x.scores.every((_score) => typeof _score === \"number\") && typeof x.sequence === \"string\"\n  );\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{labels: string[], scores: number[], sequence: string}>\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/chatCompletion.ts\nasync function chatCompletion(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"text-generation\",\n    chatCompletion: true\n  });\n  const isValidOutput = typeof res === \"object\" && Array.isArray(res?.choices) && typeof res?.created === \"number\" && typeof res?.id === \"string\" && typeof res?.model === \"string\" && typeof res?.system_fingerprint === \"string\" && typeof res?.usage === \"object\";\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected ChatCompletionOutput\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/chatCompletionStream.ts\nasync function* chatCompletionStream(args, options) {\n  yield* streamingRequest(args, {\n    ...options,\n    taskHint: \"text-generation\",\n    chatCompletion: true\n  });\n}\n\n// src/tasks/multimodal/documentQuestionAnswering.ts\nasync function documentQuestionAnswering(args, options) {\n  const reqArgs = {\n    ...args,\n    inputs: {\n      question: args.inputs.question,\n      // convert Blob or ArrayBuffer to base64\n      image: base64FromBytes(\n        new Uint8Array(\n          args.inputs.image instanceof ArrayBuffer ? args.inputs.image : await args.inputs.image.arrayBuffer()\n        )\n      )\n    }\n  };\n  const res = toArray(\n    await request(reqArgs, {\n      ...options,\n      taskHint: \"document-question-answering\"\n    })\n  )?.[0];\n  const isValidOutput = typeof res?.answer === \"string\" && (typeof res.end === \"number\" || typeof res.end === \"undefined\") && (typeof res.score === \"number\" || typeof res.score === \"undefined\") && (typeof res.start === \"number\" || typeof res.start === \"undefined\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{answer: string, end?: number, score?: number, start?: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/multimodal/visualQuestionAnswering.ts\nasync function visualQuestionAnswering(args, options) {\n  const reqArgs = {\n    ...args,\n    inputs: {\n      question: args.inputs.question,\n      // convert Blob or ArrayBuffer to base64\n      image: base64FromBytes(\n        new Uint8Array(\n          args.inputs.image instanceof ArrayBuffer ? args.inputs.image : await args.inputs.image.arrayBuffer()\n        )\n      )\n    }\n  };\n  const res = (await request(reqArgs, {\n    ...options,\n    taskHint: \"visual-question-answering\"\n  }))?.[0];\n  const isValidOutput = typeof res?.answer === \"string\" && typeof res.score === \"number\";\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{answer: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/tabular/tabularRegression.ts\nasync function tabularRegression(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"tabular-regression\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected number[]\");\n  }\n  return res;\n}\n\n// src/tasks/tabular/tabularClassification.ts\nasync function tabularClassification(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"tabular-classification\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected number[]\");\n  }\n  return res;\n}\n\n// src/HfInference.ts\nvar HfInference = class {\n  accessToken;\n  defaultOptions;\n  constructor(accessToken = \"\", defaultOptions = {}) {\n    this.accessToken = accessToken;\n    this.defaultOptions = defaultOptions;\n    for (const [name, fn] of Object.entries(tasks_exports)) {\n      Object.defineProperty(this, name, {\n        enumerable: false,\n        value: (params, options) => (\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          fn({ ...params, accessToken }, { ...defaultOptions, ...options })\n        )\n      });\n    }\n  }\n  /**\n   * Returns copy of HfInference tied to a specified endpoint.\n   */\n  endpoint(endpointUrl) {\n    return new HfInferenceEndpoint(endpointUrl, this.accessToken, this.defaultOptions);\n  }\n};\nvar HfInferenceEndpoint = class {\n  constructor(endpointUrl, accessToken = \"\", defaultOptions = {}) {\n    accessToken;\n    defaultOptions;\n    for (const [name, fn] of Object.entries(tasks_exports)) {\n      Object.defineProperty(this, name, {\n        enumerable: false,\n        value: (params, options) => (\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          fn({ ...params, accessToken, endpointUrl }, { ...defaultOptions, ...options })\n        )\n      });\n    }\n  }\n};\nexport {\n  HfInference,\n  HfInferenceEndpoint,\n  InferenceOutputError,\n  audioClassification,\n  audioToAudio,\n  automaticSpeechRecognition,\n  chatCompletion,\n  chatCompletionStream,\n  documentQuestionAnswering,\n  featureExtraction,\n  fillMask,\n  imageClassification,\n  imageSegmentation,\n  imageToImage,\n  imageToText,\n  objectDetection,\n  questionAnswering,\n  request,\n  sentenceSimilarity,\n  streamingRequest,\n  summarization,\n  tableQuestionAnswering,\n  tabularClassification,\n  tabularRegression,\n  textClassification,\n  textGeneration,\n  textGenerationStream,\n  textToImage,\n  textToSpeech,\n  tokenClassification,\n  translation,\n  visualQuestionAnswering,\n  zeroShotClassification,\n  zeroShotImageClassification\n};\n","export const uid = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (character) => {\n        const randomValue = Math.random() * 16 | 0;\n        const value = character == 'x' ? randomValue : (randomValue & 0x3 | 0x8);\n        return value.toString(16);\n    });\n};\n","export const warn = (message: unknown) => {\n    if (typeof message === 'string') {\n        console.warn(`[nlux] ${message}`);\n        return;\n    }\n\n    if (message && typeof message.toString === 'function') {\n        console.warn(`[nlux] ${message.toString()}`);\n        return;\n    }\n\n    console.warn('[nlux]');\n    console.log(JSON.stringify(message, null, 2));\n};\n\nconst warnedMessages: string[] = [];\nexport const warnOnce = (message: string) => {\n    if (warnedMessages.includes(message)) {\n        return;\n    }\n\n    warnedMessages.push(message);\n    warn(message);\n};\n","import {NLErrorId} from '@shared/types/exceptions/errors';\n\nexport const adapterErrorToExceptionId = (error: unknown): NLErrorId | null => {\n    if (typeof error === 'object' && error !== null) {\n        const errorAsObject = error as Record<string, unknown>;\n        if (errorAsObject.code === 'invalid_api_key') {\n            return 'invalid-api-key';\n        }\n\n        if (\n            errorAsObject.message && typeof errorAsObject.message === 'string' &&\n            errorAsObject.message.toLowerCase().includes('connection error')\n        ) {\n            return 'connection-error';\n        }\n    }\n\n    return null;\n};\n","import {HfInference} from '@huggingface/inference';\nimport {\n    ChatAdapterExtras,\n    DataTransferMode,\n    StandardAdapterInfo,\n    StandardChatAdapter,\n    StreamingAdapterObserver,\n} from '@nlux/core';\nimport {NluxError, NluxValidationError} from '@shared/types/error';\nimport {uid} from '@shared/utils/uid';\nimport {warn} from '@shared/utils/warn';\nimport {adapterErrorToExceptionId} from '../../utils/adapterErrorToExceptionId';\nimport {ChatAdapterOptions} from '../types/chatAdapterOptions';\n\nexport class HfChatAdapterImpl<AiMsg> implements StandardChatAdapter<AiMsg> {\n    static defaultDataTransferMode: DataTransferMode = 'batch';\n    static defaultMaxNewTokens = 500;\n\n    private readonly __instanceId: string;\n\n    private inference: HfInference;\n    private readonly options: ChatAdapterOptions<AiMsg>;\n\n    constructor(options: ChatAdapterOptions<AiMsg>) {\n        if (!options.model && !options.endpoint) {\n            throw new NluxValidationError({\n                source: this.constructor.name,\n                message: 'when creating the Hugging Face adapter, you must set either the model or the endpoint '\n                    + 'using the \"endpoint\" option!',\n            });\n        }\n\n        this.__instanceId = `${this.info.id}-${uid()}`;\n\n        this.options = {...options};\n        this.inference = new HfInference(options.authToken);\n    }\n\n    get dataTransferMode(): DataTransferMode {\n        return this.options.dataTransferMode ?? HfChatAdapterImpl.defaultDataTransferMode;\n    }\n\n    get id(): string {\n        return this.__instanceId;\n    }\n\n    get info(): StandardAdapterInfo {\n        return {\n            id: 'hugging-face-adapter',\n            capabilities: {\n                chat: true,\n                fileUpload: false,\n                textToSpeech: false,\n                speechToText: false,\n            },\n        };\n    }\n\n    async batchText(message: string): Promise<string | object | undefined> {\n        if (!this.options.model && !this.options.endpoint) {\n            throw new NluxValidationError({\n                source: this.constructor.name,\n                message: 'Unable to send message! When sending a message to the Hugging Face API, you must set either '\n                    + 'the model using the \"model\" option or the endpoint using the \"endpoint\" option!',\n            });\n        }\n\n        const parameters = {\n            inputs: message as string,\n            parameters: {\n                max_new_tokens: this.options.maxNewTokens ?? HfChatAdapterImpl.defaultMaxNewTokens,\n            },\n        };\n\n        try {\n            let output = undefined;\n            if (this.options.endpoint) {\n                const endpoint = this.inference.endpoint(this.options.endpoint);\n                output = await endpoint.textGeneration(parameters);\n            } else {\n                output = await this.inference.textGeneration({\n                    model: this.options.model,\n                    ...parameters,\n                });\n            }\n\n            return output;\n        } catch (error) {\n            const message = (error as Error).message\n                || 'An error occurred while sending the message to the Hugging Face API';\n\n            throw new NluxError({\n                source: this.constructor.name,\n                message,\n                exceptionId: adapterErrorToExceptionId(error) ?? undefined,\n            });\n        }\n    }\n\n    preProcessAiBatchedMessage(message: string | object | undefined, extras: ChatAdapterExtras<AiMsg>): AiMsg | undefined {\n        throw new Error('Method not implemented.');\n    }\n\n    preProcessAiStreamedChunk(chunk: string | object | undefined, extras: ChatAdapterExtras<AiMsg>): AiMsg | undefined {\n        throw new Error('Method not implemented.');\n    }\n\n    streamText(\n        message: string,\n        observer: StreamingAdapterObserver<string | object | undefined>,\n    ) {\n        Promise.resolve().then(async () => {\n            if (!this.options.model && !this.options.endpoint) {\n                throw new NluxValidationError({\n                    source: this.constructor.name,\n                    message: 'Unable to send message! When sending a message to the Hugging Face API, you must set either '\n                        + 'the model using the \"model\" option or the endpoint using the \"endpoint\" option!',\n                });\n            }\n\n            const readyMessage = await this.encode(message);\n            const parameters = {\n                inputs: readyMessage,\n                parameters: {\n                    max_new_tokens: this.options.maxNewTokens ?? HfChatAdapterImpl.defaultMaxNewTokens,\n                },\n            };\n\n            let output: AsyncGenerator<unknown> | undefined = undefined;\n\n            try {\n                if (this.options.endpoint) {\n                    const endpoint = this.inference.endpoint(this.options.endpoint);\n                    output = endpoint.textGenerationStream(parameters);\n                } else {\n                    output = this.inference.textGenerationStream({\n                        model: this.options.model,\n                        ...parameters,\n                    });\n                }\n\n                while (true) {\n                    if (!output) {\n                        break;\n                    }\n\n                    const result = await output.next();\n                    const {done, value} = result;\n                    if (done) {\n                        break;\n                    }\n\n                    observer.next(\n                        await this.decode((value as Record<string, unknown> | undefined)?.token) as string, // We are forced to cast here!\n                    );\n                }\n\n                observer.complete();\n            } catch (error) {\n                const errorTyped = error as Error;\n                observer.error(errorTyped);\n                warn(\n                    'An error occurred while sending the message to the Hugging Face streaming API: \\n'\n                    + errorTyped.message,\n                );\n            }\n        });\n    }\n\n    private async decode(payload: unknown): Promise<AiMsg> {\n        const output = (() => {\n            if (typeof payload === 'string') {\n                return payload;\n            }\n\n            if (Array.isArray(payload)) {\n                if (payload.length === 0) {\n                    return '';\n                }\n\n                const responseToConsider = payload[0];\n                if (\n                    typeof responseToConsider === 'object' && responseToConsider &&\n                    typeof responseToConsider.generated_text === 'string'\n                ) {\n                    return responseToConsider.generated_text;\n                }\n            }\n\n            const generated_text = payload\n                ? (payload as Record<string, unknown>).generated_text\n                : undefined;\n\n            if (typeof generated_text === 'string') {\n                return generated_text;\n            }\n\n            const text = payload && typeof payload === 'object' && 'text' in payload\n                ? (payload as {text: string}).text\n                : undefined;\n\n            if (text === 'string') {\n                return text;\n            }\n\n            return '';\n        })();\n\n        const {preProcessors: {output: outputPreProcessor} = {}} = this.options;\n        if (outputPreProcessor) {\n            return Promise.resolve(outputPreProcessor(output));\n        } else {\n            return Promise.resolve(output);\n        }\n    }\n\n    private async encode(message: string): Promise<string> {\n        const messageAsAny = message as unknown;\n        const {preProcessors: {input: inputPreProcessor} = {}} = this.options;\n        if (inputPreProcessor && messageAsAny) {\n            if (typeof messageAsAny === 'string') {\n                return inputPreProcessor(messageAsAny, this.options);\n            } else {\n                warn(\n                    'The input pre-processor function was provided, but the message is not a string! ' +\n                    'Input pre-processor will not be applied.',\n                );\n            }\n        }\n\n        return message;\n    }\n}\n","import {DataTransferMode} from '@nlux/core';\nimport {NluxUsageError, NluxValidationError} from '@shared/types/error';\nimport {HfChatAdapterImpl} from '../adapter/chatAdapter';\nimport {HfInputPreProcessor} from '../types/inputPreProcessor';\nimport {HfOutputPreProcessor} from '../types/outputPreProcessor';\nimport {ChatAdapterBuilder} from './builder';\n\nexport class ChatAdapterBuilderImpl<AiMsg> implements ChatAdapterBuilder<AiMsg> {\n    private theAuthToken: string | null = null;\n    private theDataTransferMode: DataTransferMode = 'stream';\n    private theEndpoint: string | null = null;\n    private theInputPreProcessor: HfInputPreProcessor<AiMsg> | null = null;\n    private theMaxNewTokens: number | null = null;\n    private theModel: string | null = null;\n    private theOutputPreProcessor: HfOutputPreProcessor<AiMsg> | null = null;\n    private theSystemMessage: string | null = null;\n\n    private withDataTransferModeCalled = false;\n\n    create(): HfChatAdapterImpl<AiMsg> {\n        if (!this.theModel && !this.theEndpoint) {\n            throw new NluxValidationError({\n                source: this.constructor.name,\n                message: 'You must provide a model or an endpoint using the \"withModel()\" method or the ' +\n                    '\"withEndpoint()\" method!',\n            });\n        }\n\n        return new HfChatAdapterImpl({\n            dataTransferMode: this.theDataTransferMode,\n            model: this.theModel ?? undefined,\n            endpoint: this.theEndpoint ?? undefined,\n            authToken: this.theAuthToken ?? undefined,\n            preProcessors: {\n                input: this.theInputPreProcessor ?? undefined,\n                output: this.theOutputPreProcessor ?? undefined,\n            },\n            maxNewTokens: this.theMaxNewTokens ?? undefined,\n            systemMessage: this.theSystemMessage ?? undefined,\n        });\n    }\n\n    withAuthToken(authToken: string): ChatAdapterBuilder<AiMsg> {\n        if (this.theAuthToken !== null) {\n            throw new NluxUsageError({\n                source: this.constructor.name,\n                message: 'Cannot set the auth token more than once',\n            });\n        }\n\n        this.theAuthToken = authToken;\n        return this;\n    }\n\n    withDataTransferMode(mode: DataTransferMode): ChatAdapterBuilder<AiMsg> {\n        if (this.withDataTransferModeCalled) {\n            throw new NluxUsageError({\n                source: this.constructor.name,\n                message: 'Cannot set the data loading mode more than once',\n            });\n        }\n\n        this.theDataTransferMode = mode;\n        this.withDataTransferModeCalled = true;\n        return this;\n    }\n\n    withEndpoint(endpoint: string): ChatAdapterBuilder<AiMsg> {\n        if (this.theEndpoint !== null) {\n            throw new NluxUsageError({\n                source: this.constructor.name,\n                message: 'Cannot set the endpoint because a model or an endpoint has already been set',\n            });\n        }\n\n        this.theEndpoint = endpoint;\n        return this;\n    }\n\n    withInputPreProcessor(inputPreProcessor: HfInputPreProcessor<AiMsg>): ChatAdapterBuilder<AiMsg> {\n        if (this.theInputPreProcessor !== null) {\n            throw new NluxUsageError({\n                source: this.constructor.name,\n                message: 'Cannot set the input pre-processor more than once',\n            });\n        }\n\n        this.theInputPreProcessor = inputPreProcessor;\n        return this;\n    }\n\n    withMaxNewTokens(maxNewTokens: number): ChatAdapterBuilder<AiMsg> {\n        if (this.theMaxNewTokens !== null) {\n            throw new NluxUsageError({\n                source: this.constructor.name,\n                message: 'Cannot set the max new tokens more than once',\n            });\n        }\n\n        this.theMaxNewTokens = maxNewTokens;\n        return this;\n    }\n\n    withModel(model: string) {\n        if (this.theModel !== null) {\n            throw new NluxUsageError({\n                source: this.constructor.name,\n                message: 'Cannot set the model because a model or an endpoint has already been set',\n            });\n        }\n\n        this.theModel = model;\n        return this;\n    }\n\n    withOutputPreProcessor(outputPreProcessor: HfOutputPreProcessor<AiMsg>): ChatAdapterBuilder<AiMsg> {\n        if (this.theOutputPreProcessor !== null) {\n            throw new NluxUsageError({\n                source: this.constructor.name,\n                message: 'Cannot set the output pre-processor more than once',\n            });\n        }\n\n        this.theOutputPreProcessor = outputPreProcessor;\n        return this;\n    }\n\n    withSystemMessage(message: string): ChatAdapterBuilder<AiMsg> {\n        if (this.theSystemMessage !== null) {\n            throw new NluxUsageError({\n                source: this.constructor.name,\n                message: 'Cannot set the system message more than once',\n            });\n        }\n\n        this.theSystemMessage = message;\n        return this;\n    }\n}\n","import {ChatAdapterBuilder} from './hf/builder/builder';\nimport {ChatAdapterBuilderImpl} from './hf/builder/builderImpl';\n\nexport const createChatAdapter = <AiMsg = string>(): ChatAdapterBuilder<AiMsg> => {\n    return new ChatAdapterBuilderImpl<AiMsg>();\n};\n","import {HfInputPreProcessor} from '../types/inputPreProcessor';\nimport {HfOutputPreProcessor} from '../types/outputPreProcessor';\n\nexport const llama2InputPreProcessor: HfInputPreProcessor<string> = (\n    input,\n    adapterOptions,\n) => {\n    const systemMessage = adapterOptions?.systemMessage\n        ?? 'You are a helpful assistant. You keep your answers short.';\n\n    return (\n        `<s> [INST] <<SYS>> ${systemMessage} <</SYS>> </s>` +\n        `<s> [INST] ${input} [/INST]`\n    );\n};\n\nexport const llama2OutputPreProcessor: HfOutputPreProcessor<string> = (\n    output,\n) => {\n    // Strip any HTML-like tags from the output\n    if (!output) {\n        return '';\n    }\n\n    return output.replace(/<[^>]*>/g, '');\n};"],"names":["__publicField","__defProp","message"],"mappings":"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","x_google_ignoreList":[1]}