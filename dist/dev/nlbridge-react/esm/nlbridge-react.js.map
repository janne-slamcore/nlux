{"version":3,"file":"nlbridge-react.js","sources":["../../../../packages/react/nlbridge/src/hooks/getChatAdapterBuilder.ts","../../../../packages/react/nlbridge/src/hooks/useChatAdapter.ts"],"sourcesContent":["import {ChatAdapterOptions, createChatAdapter} from '@nlux/nlbridge';\nimport {StandardChatAdapter} from '@nlux/react';\n\nexport const getChatAdapterBuilder = <AiMsg>(options: ChatAdapterOptions): StandardChatAdapter<AiMsg> => {\n    const {\n        url,\n        mode,\n        context,\n        headers,\n    } = options || {};\n\n    if (mode && mode !== 'copilot' && mode !== 'chat') {\n        throw new Error(`Data transfer mode not supported`);\n    }\n\n    if (!url) {\n        throw new Error(`Runnable URL is required`);\n    }\n\n    let newAdapter = createChatAdapter<AiMsg>().withUrl(url);\n\n    if (mode) {\n        newAdapter = newAdapter.withMode(mode);\n    }\n\n    if (context) {\n        newAdapter = newAdapter.withContext(context);\n    }\n\n    if (headers) {\n        newAdapter = newAdapter.withHeaders(headers);\n    }\n\n    return newAdapter.create();\n};\n","import {AiContext as ReactAiContext, StandardChatAdapter} from '@nlux/react';\nimport {useContext, useEffect, useState} from 'react';\nimport {getChatAdapterBuilder} from './getChatAdapterBuilder';\n\nexport type ReactChatAdapterOptions = {\n    url: string;\n    mode?: 'chat' | 'copilot';\n    context?: ReactAiContext;\n    headers?: Record<string, string>;\n};\n\nexport const useChatAdapter = <AiMsg = string>(options: ReactChatAdapterOptions): StandardChatAdapter<AiMsg> => {\n    const {\n        context,\n        url,\n        mode,\n        headers,\n    } = options;\n\n    const [\n        headersToUse,\n        setHeadersToUse,\n    ] = useState<Record<string, string> | undefined>(headers);\n\n    useEffect(() => {\n        if (!headers && headersToUse) {\n            setHeadersToUse(undefined);\n            return;\n        }\n\n        if (headers && !headersToUse) {\n            setHeadersToUse(headers);\n            return;\n        }\n\n        // Only update if headers have changed\n        if (headers && headersToUse) {\n            if (Object.keys(headers).length !== Object.keys(headersToUse).length) {\n                setHeadersToUse(headers);\n                return;\n            }\n\n            for (const key in headers) {\n                if (headers[key] !== headersToUse[key]) {\n                    setHeadersToUse(headers);\n                    return;\n                }\n            }\n        }\n    }, [headers]);\n\n    const coreContext = context?.ref ? useContext(context.ref) : undefined;\n    const [adapter, setAdapter] = useState<StandardChatAdapter<AiMsg>>(\n        getChatAdapterBuilder({\n            url,\n            mode,\n            context: coreContext,\n            headers,\n        }),\n    );\n\n    useEffect(() => {\n        const newAdapter = getChatAdapterBuilder<AiMsg>({\n            url,\n            mode,\n            headers: headersToUse,\n            context: coreContext,\n        });\n\n        setAdapter(newAdapter);\n    }, [\n        url,\n        mode,\n        headersToUse,\n        coreContext,\n    ]);\n\n    return adapter;\n};\n"],"names":[],"mappings":"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"}