{"version":3,"file":"nlbridge-react.js","sources":["../../../../packages/react/nlbridge/src/hooks/getChatAdapterBuilder.ts","../../../../packages/react/nlbridge/src/hooks/useChatAdapter.ts"],"sourcesContent":["import {ChatAdapterOptions, createChatAdapter} from '@nlux/nlbridge';\nimport {StandardChatAdapter} from '@nlux/react';\n\nexport const getChatAdapterBuilder = <AiMsg>(options: ChatAdapterOptions): StandardChatAdapter<AiMsg> => {\n    const {\n        url,\n        mode,\n        context,\n        headers,\n    } = options || {};\n\n    if (mode && mode !== 'copilot' && mode !== 'chat') {\n        throw new Error(`Data transfer mode not supported`);\n    }\n\n    if (!url) {\n        throw new Error(`Runnable URL is required`);\n    }\n\n    let newAdapter = createChatAdapter<AiMsg>().withUrl(url);\n\n    if (mode) {\n        newAdapter = newAdapter.withMode(mode);\n    }\n\n    if (context) {\n        newAdapter = newAdapter.withContext(context);\n    }\n\n    if (headers) {\n        newAdapter = newAdapter.withHeaders(headers);\n    }\n\n    return newAdapter.create();\n};\n","import {AiContext as ReactAiContext, StandardChatAdapter} from '@nlux/react';\nimport {useContext, useEffect, useState} from 'react';\nimport {getChatAdapterBuilder} from './getChatAdapterBuilder';\n\nexport type ReactChatAdapterOptions = {\n    url: string;\n    mode?: 'chat' | 'copilot';\n    context?: ReactAiContext;\n    headers?: Record<string, string>;\n};\n\nexport const useChatAdapter = <AiMsg = string>(options: ReactChatAdapterOptions): StandardChatAdapter<AiMsg> => {\n    const {\n        context,\n        url,\n        mode,\n        headers,\n    } = options;\n\n    const [\n        headersToUse,\n        setHeadersToUse,\n    ] = useState<Record<string, string> | undefined>(headers);\n\n    useEffect(() => {\n        if (!headers && headersToUse) {\n            setHeadersToUse(undefined);\n            return;\n        }\n\n        if (headers && !headersToUse) {\n            setHeadersToUse(headers);\n            return;\n        }\n\n        // Only update if headers have changed\n        if (headers && headersToUse) {\n            if (Object.keys(headers).length !== Object.keys(headersToUse).length) {\n                setHeadersToUse(headers);\n                return;\n            }\n\n            for (const key in headers) {\n                if (headers[key] !== headersToUse[key]) {\n                    setHeadersToUse(headers);\n                    return;\n                }\n            }\n        }\n    }, [headers]);\n\n    const coreContext = context?.ref ? useContext(context.ref) : undefined;\n    const [adapter, setAdapter] = useState<StandardChatAdapter<AiMsg>>(\n        getChatAdapterBuilder({\n            url,\n            mode,\n            context: coreContext,\n            headers,\n        }),\n    );\n\n    useEffect(() => {\n        const newAdapter = getChatAdapterBuilder<AiMsg>({\n            url,\n            mode,\n            headers: headersToUse,\n            context: coreContext,\n        });\n\n        setAdapter(newAdapter);\n    }, [\n        url,\n        mode,\n        headersToUse,\n        coreContext,\n    ]);\n\n    return adapter;\n};\n"],"names":["createChatAdapter","useState","useEffect","useContext"],"mappings":"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"}