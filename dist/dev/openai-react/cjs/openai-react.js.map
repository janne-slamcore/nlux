{"version":3,"file":"openai-react.js","sources":["../../../../packages/shared/src/types/error.ts","../../../../packages/react/openai/src/hooks/getAdapterBuilder.ts","../../../../packages/react/openai/src/hooks/useUnsafeChatAdapter.ts"],"sourcesContent":["import {NLErrorId} from './exceptions/errors';\n\nexport type NluxRawError = {\n    readonly message?: string;\n    readonly type?: string;\n    readonly source?: string;\n    readonly exceptionId?: NLErrorId;\n};\n\nexport class NluxError extends Error {\n    readonly exceptionId?: NLErrorId;\n    readonly message: string;\n    readonly source?: string;\n    readonly type: string;\n\n    constructor(rawError: NluxRawError = {}) {\n        super(rawError.message);\n\n        this.message = rawError.message ?? '';\n        this.source = rawError.source;\n        this.type = this.constructor.name;\n        this.exceptionId = rawError.exceptionId;\n    }\n}\n\nexport class NluxUsageError extends NluxError {\n}\n\nexport class NluxValidationError extends NluxError {\n}\n\nexport class NluxRenderingError extends NluxError {\n}\n","import {ChatAdapterBuilder, ChatAdapterOptions, createUnsafeChatAdapter} from '@nlux/openai';\nimport {NluxUsageError} from '@shared/types/error';\n\nconst source = 'hooks/getAdapterBuilder';\n\nexport const getAdapterBuilder = <AiMsg>(options: ChatAdapterOptions): ChatAdapterBuilder<AiMsg> => {\n    const {\n        apiKey,\n        dataTransferMode,\n        systemMessage,\n        model,\n    } = options || {};\n\n    if (dataTransferMode && dataTransferMode !== 'stream' && dataTransferMode !== 'batch') {\n        throw new NluxUsageError({\n            source,\n            message: 'Data transfer mode not supported',\n        });\n    }\n\n    if (!apiKey) {\n        throw new NluxUsageError({\n            source,\n            message: 'API key is required',\n        });\n    }\n\n    let newAdapter = createUnsafeChatAdapter<AiMsg>().withApiKey(apiKey);\n\n    if (model !== undefined) {\n        newAdapter = newAdapter.withModel(model);\n    }\n\n    if (dataTransferMode) {\n        newAdapter = newAdapter.withDataTransferMode(dataTransferMode);\n    }\n\n    if (systemMessage) {\n        newAdapter = newAdapter.withSystemMessage(systemMessage);\n    }\n\n    return newAdapter;\n};\n","import {ChatAdapterOptions, StandardChatAdapter} from '@nlux/openai';\nimport {useEffect, useState} from 'react';\nimport {getAdapterBuilder} from './getAdapterBuilder';\n\nexport const useUnsafeChatAdapter = <AiMsg>(\n    options: ChatAdapterOptions,\n): StandardChatAdapter<AiMsg> => {\n    const [isInitialized, setIsInitialized] = useState(false);\n    const [adapter, setAdapter] = useState<StandardChatAdapter<AiMsg>>(\n        getAdapterBuilder<AiMsg>(options).create(),\n    );\n\n    const {\n        apiKey,\n        dataTransferMode,\n        systemMessage,\n        model,\n    } = options || {};\n\n    useEffect(() => {\n        if (!isInitialized) {\n            setIsInitialized(true);\n            return;\n        }\n\n        const newAdapter = getAdapterBuilder<AiMsg>(options).create();\n        setAdapter(newAdapter);\n    }, [\n        apiKey,\n        dataTransferMode,\n        systemMessage,\n        model,\n    ]);\n\n    return adapter;\n};\n"],"names":["createUnsafeChatAdapter","useState","useEffect"],"mappings":";;;;;;;;AASO,MAAM,kBAAkB,KAAA,CAAM;AAAA,EAMjC,WAAA,CAAY,QAAA,GAAyB,EAAC,EAAG;AACrC,IAAA,KAAA,CAAM,SAAS,OAAO,CAAA;AAN1B,IAAA,aAAA,CAAA,IAAA,EAAS,aAAA,CAAA;AACT,IAAA,aAAA,CAAA,IAAA,EAAS,SAAA,CAAA;AACT,IAAA,aAAA,CAAA,IAAA,EAAS,QAAA,CAAA;AACT,IAAA,aAAA,CAAA,IAAA,EAAS,MAAA,CAAA;AAKL,IAAA,IAAA,CAAK,OAAA,GAAU,SAAS,OAAA,IAAW,EAAA;AACnC,IAAA,IAAA,CAAK,SAAS,QAAA,CAAS,MAAA;AACvB,IAAA,IAAA,CAAK,IAAA,GAAO,KAAK,WAAA,CAAY,IAAA;AAC7B,IAAA,IAAA,CAAK,cAAc,QAAA,CAAS,WAAA;AAAA,EAChC;AACJ;AAEO,MAAM,uBAAuB,SAAA,CAAU;AAC9C;;ACvBA,MAAM,MAAA,GAAS,yBAAA;AAER,MAAM,iBAAA,GAAoB,CAAQ,OAAA,KAA2D;AAChG,EAAA,MAAM;AAAA,IACF,MAAA;AAAA,IACA,gBAAA;AAAA,IACA,aAAA;AAAA,IACA;AAAA,GACJ,GAAI,WAAW,EAAC;AAEhB,EAAA,IAAI,gBAAA,IAAoB,gBAAA,KAAqB,QAAA,IAAY,gBAAA,KAAqB,OAAA,EAAS;AACnF,IAAA,MAAM,IAAI,cAAA,CAAe;AAAA,MACrB,MAAA;AAAA,MACA,OAAA,EAAS;AAAA,KACZ,CAAA;AAAA,EACL;AAEA,EAAA,IAAI,CAAC,MAAA,EAAQ;AACT,IAAA,MAAM,IAAI,cAAA,CAAe;AAAA,MACrB,MAAA;AAAA,MACA,OAAA,EAAS;AAAA,KACZ,CAAA;AAAA,EACL;AAEA,EAAA,IAAI,UAAA,GAAaA,8BAAA,EAA+B,CAAE,UAAA,CAAW,MAAM,CAAA;AAEnE,EAAA,IAAI,UAAU,MAAA,EAAW;AACrB,IAAA,UAAA,GAAa,UAAA,CAAW,UAAU,KAAK,CAAA;AAAA,EAC3C;AAEA,EAAA,IAAI,gBAAA,EAAkB;AAClB,IAAA,UAAA,GAAa,UAAA,CAAW,qBAAqB,gBAAgB,CAAA;AAAA,EACjE;AAEA,EAAA,IAAI,aAAA,EAAe;AACf,IAAA,UAAA,GAAa,UAAA,CAAW,kBAAkB,aAAa,CAAA;AAAA,EAC3D;AAEA,EAAA,OAAO,UAAA;AACX,CAAA;;ACtCO,MAAM,oBAAA,GAAuB,CAChC,OAAA,KAC6B;AAC7B,EAAA,MAAM,CAAC,aAAA,EAAe,gBAAgB,CAAA,GAAIC,eAAS,KAAK,CAAA;AACxD,EAAA,MAAM,CAAC,OAAA,EAAS,UAAU,CAAA,GAAIA,cAAA;AAAA,IAC1B,iBAAA,CAAyB,OAAO,CAAA,CAAE,MAAA;AAAO,GAC7C;AAEA,EAAA,MAAM;AAAA,IACF,MAAA;AAAA,IACA,gBAAA;AAAA,IACA,aAAA;AAAA,IACA;AAAA,GACJ,GAAI,WAAW,EAAC;AAEhB,EAAAC,eAAA,CAAU,MAAM;AACZ,IAAA,IAAI,CAAC,aAAA,EAAe;AAChB,MAAA,gBAAA,CAAiB,IAAI,CAAA;AACrB,MAAA;AAAA,IACJ;AAEA,IAAA,MAAM,UAAA,GAAa,iBAAA,CAAyB,OAAO,CAAA,CAAE,MAAA,EAAO;AAC5D,IAAA,UAAA,CAAW,UAAU,CAAA;AAAA,EACzB,CAAA,EAAG;AAAA,IACC,MAAA;AAAA,IACA,gBAAA;AAAA,IACA,aAAA;AAAA,IACA;AAAA,GACH,CAAA;AAED,EAAA,OAAO,OAAA;AACX;;;;;;;;"}