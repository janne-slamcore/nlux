!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@nlux/hf"),require("react")):"function"==typeof define&&define.amd?define(["exports","@nlux/hf","react"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)["@nlux/hf-react"]={},e.hf,e.react)}(this,function(e,t,r){"use strict";var o=Object.defineProperty,s=(e,t,r)=>((e,t,r)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r)(e,"symbol"!=typeof t?t+"":t,r);class n extends Error{constructor(e={}){super(e.message),s(this,"exceptionId"),s(this,"message"),s(this,"source"),s(this,"type"),this.message=e.message??"",this.source=e.source,this.type=this.constructor.name,this.exceptionId=e.exceptionId}}class a extends n{}const u="hooks/getAdapterBuilder";Object.defineProperty(e,"createChatAdapter",{enumerable:!0,get:function(){return t.createChatAdapter}}),Object.defineProperty(e,"llama2InputPreProcessor",{enumerable:!0,get:function(){return t.llama2InputPreProcessor}}),Object.defineProperty(e,"llama2OutputPreProcessor",{enumerable:!0,get:function(){return t.llama2OutputPreProcessor}}),e.useChatAdapter=e=>{if(!e.model)throw new Error("You must provide either a model or an endpoint to use Hugging Face Inference API.");const[o,s]=r.useState(!1),[n]=r.useState((e=>{const{model:r,authToken:o,dataTransferMode:s,preProcessors:n,maxNewTokens:i,systemMessage:c}=e||{};if(s&&"stream"!==s&&"batch"!==s)throw new a({source:u,message:'Data transfer mode for Hugging Face Inference API must be either "stream" or "batch"'});if(void 0===r)throw new a({source:u,message:"You must provide either a model or an endpoint to use Hugging Face Inference API."});let d=t.createChatAdapter().withModel(r);return void 0!==o&&(d=d.withAuthToken(o)),void 0!==s&&(d=d.withDataTransferMode(s)),void 0!==n?.input&&(d=d.withInputPreProcessor(n.input)),void 0!==n?.output&&(d=d.withOutputPreProcessor(n?.output)),void 0!==c&&(d=d.withSystemMessage(c)),void 0!==i&&(d=d.withMaxNewTokens(i)),d})(e).create()),{authToken:i,dataTransferMode:c,model:d,systemMessage:p,preProcessors:{input:f,output:h}={},maxNewTokens:l}=e||{};return r.useEffect(()=>{o||s(!0)},[i,c,d,p,f,h,l]),n}});
