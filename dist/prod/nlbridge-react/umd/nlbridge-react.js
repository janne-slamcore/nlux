!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@nlux/nlbridge"),require("react")):"function"==typeof define&&define.amd?define(["exports","@nlux/nlbridge","react"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)["@nlux/nlbridge-react"]={},e.nlbridge,e.react)}(this,function(e,t,r){"use strict";const n=e=>{const{url:r,mode:n,context:o,headers:i}=e||{};if(n&&"copilot"!==n&&"chat"!==n)throw new Error("Data transfer mode not supported");if(!r)throw new Error("Runnable URL is required");let d=t.createChatAdapter().withUrl(r);return n&&(d=d.withMode(n)),o&&(d=d.withContext(o)),i&&(d=d.withHeaders(i)),d.create()};Object.defineProperty(e,"createChatAdapter",{enumerable:!0,get:function(){return t.createChatAdapter}}),Object.defineProperty(e,"createContextAdapter",{enumerable:!0,get:function(){return t.createContextAdapter}}),e.useChatAdapter=e=>{const{context:t,url:o,mode:i,headers:d}=e,[a,c]=r.useState(d);r.useEffect(()=>{if(d||!a)if(!d||a){if(d&&a){if(Object.keys(d).length!==Object.keys(a).length)return void c(d);for(const e in d)if(d[e]!==a[e])return void c(d)}}else c(d);else c(void 0)},[d]);const u=t?.ref?r.useContext(t.ref):void 0,[s,f]=r.useState(n({url:o,mode:i,context:u,headers:d}));return r.useEffect(()=>{const e=n({url:o,mode:i,headers:a,context:u});f(e)},[o,i,a,u]),s}});
