var e=Object.defineProperty,t=(t,s,r)=>((t,s,r)=>s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[s]=r)(t,"symbol"!=typeof s?s+"":s,r);class s extends Error{constructor(e={}){super(e.message),t(this,"exceptionId"),t(this,"message"),t(this,"source"),t(this,"type"),this.message=e.message??"",this.source=e.source,this.type=this.constructor.name,this.exceptionId=e.exceptionId}}class r extends s{}const n=e=>{"string"!=typeof e?e&&"function"==typeof e.toString?console.warn(`[nlux] ${e.toString()}`):console.warn("[nlux]"):console.warn(`[nlux] ${e}`)};var o=Object.defineProperty,i=(e,t,s)=>((e,t,s)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class a{constructor(e){i(this,"__instanceId"),i(this,"theAiContextToUse"),i(this,"theDataTransferModeToUse"),i(this,"theEndpointUrlToUse"),i(this,"theHeaders"),i(this,"theUsageMode"),this.__instanceId=`${this.info.id}-${"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,e=>{const t=16*Math.random()|0;return("x"==e?t:3&t|8).toString(16)})}`,this.theUsageMode=e.mode,this.theEndpointUrlToUse=e.url,this.theAiContextToUse=e.context,this.theDataTransferModeToUse="copilot"===e.mode&&e.context?"batch":"stream",this.theHeaders=e.headers??{}}get context(){return this.theAiContextToUse}get dataTransferMode(){return this.theDataTransferModeToUse}get endpointUrl(){return this.theEndpointUrlToUse}get headers(){return this.theHeaders}get id(){return this.__instanceId}get info(){return{id:"nlbridge-adapter",capabilities:{chat:!0,fileUpload:!1,textToSpeech:!1,speechToText:!1}}}get usageMode(){return this.theUsageMode}preProcessAiBatchedMessage(e,t){return"string"==typeof e?e:(n("NLBridge adapter received a non-string message from the server. Returning empty string."),"")}preProcessAiStreamedChunk(e,t){return"string"==typeof e?e:(n("NLBridge adapter received a non-string chunk from the server. Returning empty string."),"")}}i(a,"defaultDataTransferMode","stream");class c extends a{constructor(e){super(e)}async batchText(e,t){this.context&&this.context.contextId&&await this.context.flush();const r="copilot"===this.usageMode?"assist":"chat",n=await fetch(this.endpointUrl,{method:"POST",headers:{...this.headers,"Content-Type":"application/json"},body:JSON.stringify({action:r,payload:{message:e,conversationHistory:t.conversationHistory,contextId:this.context?.contextId}})});if(!n.ok)throw new s({source:this.constructor.name,message:`NLBridge adapter returned status code: ${n.status}`});const o=await n.json();if("object"==typeof o&&null!==o&&!0===o.success&&"object"==typeof o.result&&null!==o.result&&"string"==typeof o.result.response){const{response:e,task:t}=o.result;return this.context&&t&&"object"==typeof t&&"string"==typeof t.taskId&&Array.isArray(t.parameters)&&this.context.runTask(t.taskId,t.parameters),e}throw new s({source:this.constructor.name,message:"Invalid response from NLBridge: String expected."})}streamText(e,t,s){throw new r({source:this.constructor.name,message:"Cannot stream text from the batch adapter!"})}}class h extends a{constructor(e){super(e)}async batchText(e,t){throw new r({source:this.constructor.name,message:"Cannot fetch text using the stream adapter!"})}streamText(e,t,s){const r=()=>{fetch(this.endpointUrl,{method:"POST",headers:{...this.headers,"Content-Type":"application/json"},body:JSON.stringify({action:"chat-stream",payload:{message:e,conversationHistory:s.conversationHistory,contextId:this.context?.contextId}})}).then(async e=>{if(!e.ok)throw new Error(`NLBridge adapter returned status code: ${e.status}`);if(!e.body)throw new Error(`NLBridge adapter returned status code: ${e.status}`);const s=e.body.getReader(),r=new TextDecoder;for(;;){const{value:e,done:o}=await s.read();if(o)break;try{const s=r.decode(e);t.next(s)}catch(e){n(`Error parsing chunk by NLBridgeStreamAdapter: ${e}`)}}t.complete()})};this.context&&this.context.contextId?this.context.flush().then(()=>r()).catch(()=>r()):r()}}var d=Object.defineProperty,u=(e,t,s)=>((e,t,s)=>t in e?d(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class l{constructor(e){u(this,"theContext"),u(this,"theHeaders"),u(this,"theMode"),u(this,"theUrl"),e&&(this.theUrl=e.theUrl,this.theMode=e.theMode,this.theContext=e.theContext,this.theHeaders=e.theHeaders)}create(){if(!this.theUrl)throw new r({source:this.constructor.name,message:"Unable to create NLBridge adapter. URL is missing. Make sure you are call withUrl() or provide url option before calling creating the adapter."});const e={url:this.theUrl,mode:this.theMode,context:this.theContext,headers:this.theHeaders};return"stream"===(e.mode??a.defaultDataTransferMode)?new h(e):new c(e)}withContext(e){if(void 0!==this.theContext)throw new r({source:this.constructor.name,message:"Cannot set the context ID option more than once"});return this.theContext=e,this}withHeaders(e){if(void 0!==this.theHeaders)throw new r({source:this.constructor.name,message:"Cannot set the headers option more than once"});return this.theHeaders=e,this}withMode(e){if(void 0!==this.theMode)throw new r({source:this.constructor.name,message:"Cannot set the usage mode option more than once"});return this.theMode=e,this}withUrl(e){if(void 0!==this.theUrl)throw new r({source:this.constructor.name,message:"Cannot set the endpoint URL option more than once"});return this.theUrl=e,this}}const x=()=>new l;var p=Object.defineProperty,m=(e,t,s)=>((e,t,s)=>t in e?p(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class g{constructor(e,t){m(this,"headers"),m(this,"url"),this.url=e,this.headers=t??{}}async create(e,t){try{const s=await fetch(this.url,{method:"POST",headers:{...this.headers,...t?.headers,"Content-Type":"application/json"},body:JSON.stringify({action:"create-context",payload:e?{items:e}:void 0})});if(!s.ok)return{success:!1,error:"Failed to set context"};const r=await s.json();return r?.result?.contextId?{success:!0,contextId:r.result.contextId}:{success:!1,error:"Invalid context ID"}}catch(e){return{success:!1,error:"Failed to set context"}}}discard(e,t){return this.sendAction(e,"discard-context",void 0,t)}removeItems(e,t,s){return this.sendAction(e,"remove-context-items",{itemIds:t},s)}async removeTasks(e,t,s){return this.sendAction(e,"remove-context-tasks",{taskIds:t},s)}resetItems(e,t,s){return this.sendAction(e,"reset-context-items",t?{items:t}:void 0,s)}resetTasks(e,t,s){return this.sendAction(e,"reset-context-tasks",t,s)}async sendAction(e,t,s,r){if(!e)return{success:!1,error:"Invalid context ID"};try{const n=await fetch(this.url,{method:"POST",headers:{...r?.headers,"Content-Type":"application/json"},body:JSON.stringify({action:t,payload:{...s,contextId:e}})});if(!n.ok)return{success:!1,error:"Failed to send action"};return{success:!0,items:await n.json()}}catch(e){return{success:!1,error:"Failed to send action"}}}async updateItems(e,t,s){return this.sendAction(e,"update-context-items",{items:t},s)}async updateTasks(e,t,s){return this.sendAction(e,"update-context-tasks",{tasks:t},s)}}var f=Object.defineProperty,y=(e,t,s)=>((e,t,s)=>t in e?f(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class w{constructor(){y(this,"endpointUrl"),y(this,"headers")}build(){if(!this.endpointUrl)throw new Error("Endpoint URL is required");return new g(this.endpointUrl,this.headers)}withHeaders(e){if(void 0!==this.headers)throw new Error("Cannot set the headers more than once");return this.headers=e,this}withUrl(e){if(void 0!==this.endpointUrl&&this.endpointUrl!==e)throw new Error("Cannot set the endpoint URL more than once");return this.endpointUrl=e,this}}const b=()=>new w;export{x as createChatAdapter,b as createContextAdapter};
