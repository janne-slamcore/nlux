"use strict";var e=require("@nlux/openai"),t=require("react"),s=Object.defineProperty,r=(e,t,r)=>((e,t,r)=>t in e?s(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r)(e,"symbol"!=typeof t?t+"":t,r);class a extends Error{constructor(e={}){super(e.message),r(this,"exceptionId"),r(this,"message"),r(this,"source"),r(this,"type"),this.message=e.message??"",this.source=e.source,this.type=this.constructor.name,this.exceptionId=e.exceptionId}}class o extends a{}const i="hooks/getAdapterBuilder",n=t=>{const{apiKey:s,dataTransferMode:r,systemMessage:a,model:n}=t||{};if(r&&"stream"!==r&&"batch"!==r)throw new o({source:i,message:"Data transfer mode not supported"});if(!s)throw new o({source:i,message:"API key is required"});let c=e.createUnsafeChatAdapter().withApiKey(s);return void 0!==n&&(c=c.withModel(n)),r&&(c=c.withDataTransferMode(r)),a&&(c=c.withSystemMessage(a)),c};Object.defineProperty(exports,"createUnsafeChatAdapter",{enumerable:!0,get:function(){return e.createUnsafeChatAdapter}}),exports.useUnsafeChatAdapter=e=>{const[s,r]=t.useState(!1),[a,o]=t.useState(n(e).create()),{apiKey:i,dataTransferMode:c,systemMessage:u,model:d}=e||{};return t.useEffect(()=>{if(!s)return void r(!0);const t=n(e).create();o(t)},[i,c,u,d]),a};
