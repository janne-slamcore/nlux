import{createUnsafeChatAdapter as e}from"@nlux/openai";export{createUnsafeChatAdapter}from"@nlux/openai";import{useState as t,useEffect as s}from"react";var r=Object.defineProperty,o=(e,t,s)=>((e,t,s)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class a extends Error{constructor(e={}){super(e.message),o(this,"exceptionId"),o(this,"message"),o(this,"source"),o(this,"type"),this.message=e.message??"",this.source=e.source,this.type=this.constructor.name,this.exceptionId=e.exceptionId}}class i extends a{}const n="hooks/getAdapterBuilder",c=t=>{const{apiKey:s,dataTransferMode:r,systemMessage:o,model:a}=t||{};if(r&&"stream"!==r&&"batch"!==r)throw new i({source:n,message:"Data transfer mode not supported"});if(!s)throw new i({source:n,message:"API key is required"});let c=e().withApiKey(s);return void 0!==a&&(c=c.withModel(a)),r&&(c=c.withDataTransferMode(r)),o&&(c=c.withSystemMessage(o)),c},d=e=>{const[r,o]=t(!1),[a,i]=t(c(e).create()),{apiKey:n,dataTransferMode:d,systemMessage:m,model:p}=e||{};return s(()=>{if(!r)return void o(!0);const t=c(e).create();i(t)},[n,d,m,p]),a};export{d as useUnsafeChatAdapter};
