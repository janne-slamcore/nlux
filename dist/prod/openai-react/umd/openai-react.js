!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@nlux/openai"),require("react")):"function"==typeof define&&define.amd?define(["exports","@nlux/openai","react"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)["@nlux/openai-react"]={},e.openai,e.react)}(this,function(e,t,s){"use strict";var r=Object.defineProperty,a=(e,t,s)=>((e,t,s)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class o extends Error{constructor(e={}){super(e.message),a(this,"exceptionId"),a(this,"message"),a(this,"source"),a(this,"type"),this.message=e.message??"",this.source=e.source,this.type=this.constructor.name,this.exceptionId=e.exceptionId}}class n extends o{}const i="hooks/getAdapterBuilder",c=e=>{const{apiKey:s,dataTransferMode:r,systemMessage:a,model:o}=e||{};if(r&&"stream"!==r&&"batch"!==r)throw new n({source:i,message:"Data transfer mode not supported"});if(!s)throw new n({source:i,message:"API key is required"});let c=t.createUnsafeChatAdapter().withApiKey(s);return void 0!==o&&(c=c.withModel(o)),r&&(c=c.withDataTransferMode(r)),a&&(c=c.withSystemMessage(a)),c};Object.defineProperty(e,"createUnsafeChatAdapter",{enumerable:!0,get:function(){return t.createUnsafeChatAdapter}}),e.useUnsafeChatAdapter=e=>{const[t,r]=s.useState(!1),[a,o]=s.useState(c(e).create()),{apiKey:n,dataTransferMode:i,systemMessage:u,model:d}=e||{};return s.useEffect(()=>{if(!t)return void r(!0);const s=c(e).create();o(s)},[n,i,u,d]),a}});
